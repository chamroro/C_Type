{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n`;\n_c5 = BaseText;\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n`;\n_c6 = OverlayText;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return '#fff';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return 'transparent';\n  }\n}};\n`;\n_c7 = Char;\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c8 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c9 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n_c10 = CompletionMessage;\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n_c11 = HiddenInput;\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  margin-left: -1px;\n  margin-right: 1px;\n  vertical-align: middle;\n  animation: blink 1s step-end infinite;\n  position: relative;\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n_c12 = Cursor;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = char => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n  const jong = code % 28;\n  const jung = (code - jong) / 28 % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 현재 입력이 목표의 일부인지 확인 (로직 개선)\nconst isPartialMatch = (target, input) => {\n  // 한글이 아니면 정확히 일치해야 함\n  if (!isKorean(target)) return target === input;\n\n  // 완전히 일치하는 경우\n  if (target === input) return true;\n\n  // 초성만 입력된 경우 (예: 목표가 '사', 입력이 'ㅅ')\n  if (isChoseong(input)) {\n    const targetDecomp = decompose(target);\n    if (targetDecomp) {\n      return CHOSEONG[targetDecomp.cho] === input;\n    }\n  }\n\n  // 종성까지 입력된 경우 (예: 목표가 '라', 입력이 '랄')\n  if (input.length === 1 && isKorean(input)) {\n    const inputDecomp = decompose(input);\n    const targetDecomp = decompose(target);\n    if (inputDecomp && targetDecomp) {\n      // 초성과 중성이 일치하면 부분 일치로 간주\n      return inputDecomp.cho === targetDecomp.cho && inputDecomp.jung === targetDecomp.jung;\n    }\n  }\n  return false;\n};\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n  const [debug, setDebug] = useState({\n    event: '',\n    data: ''\n  });\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentLine, setCurrentLine] = useState(0);\n  const inputRef = useRef(null);\n  const currentPoem = poems[0];\n\n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return correctChars / currentPoem.content.length * 100;\n  };\n\n  // 현재 줄이 완성되었는지 확인하는 함수\n  const checkLineCompletion = () => {\n    if (currentLine >= poemLines.length) return;\n\n    // 현재 줄의 시작 위치 계산\n    let lineStartPosition = 0;\n    for (let i = 0; i < currentLine; i++) {\n      lineStartPosition += poemLines[i].length + 1; // +1은 줄바꿈 문자\n    }\n\n    // 현재 줄의 내용과 길이\n    const lineContent = poemLines[currentLine];\n\n    // 현재 줄의 마지막 글자 위치\n    const lastCharPosition = lineStartPosition + lineContent.length - 1;\n\n    // 디버그 로그 추가\n    console.log({\n      currentLine,\n      lineContent,\n      userInputLength: userInput.length,\n      lastCharPosition,\n      lastChar: userInput[lastCharPosition],\n      targetLastChar: lineContent[lineContent.length - 1],\n      isCompleted: userInput.substring(lineStartPosition, lineStartPosition + lineContent.length) === lineContent\n    });\n\n    // 사용자가 입력한 현재 줄의 내용\n    if (userInput.length >= lineStartPosition + lineContent.length) {\n      const currentLineInput = userInput.substring(lineStartPosition, lineStartPosition + lineContent.length);\n\n      // 현재 줄이 완료되었는지 확인\n      const isCurrentLineCompleted = currentLineInput === lineContent;\n\n      // 현재 줄을 정확히 입력했고, 조합 중이 아니면 다음 줄로 이동\n      if (isCurrentLineCompleted && !composing) {\n        moveToNextLine();\n      }\n    } else if (userInput.length > lastCharPosition && !composing) {\n      // 마지막 글자까지 입력했는지 확인\n      const currentLineInput = userInput.substring(lineStartPosition, userInput.length);\n      const targetLinePart = lineContent.substring(0, currentLineInput.length);\n\n      // 지금까지 입력한 부분이 일치하고, 마지막 글자가 완성되었으면 다음 줄로 이동\n      if (currentLineInput === targetLinePart && userInput.length === lastCharPosition + 1 && userInput[lastCharPosition] === lineContent[lineContent.length - 1]) {\n        moveToNextLine();\n      }\n    }\n  };\n\n  // 다음 줄로 이동하는 함수\n  const moveToNextLine = () => {\n    if (currentLine < poemLines.length - 1) {\n      console.log(\"Moving to next line\", currentLine + 1);\n      // 다음 줄로 이동\n      const nextLine = currentLine + 1;\n      setCurrentLine(nextLine);\n\n      // 다음 줄의 시작 위치 계산\n      let nextLineStartPosition = 0;\n      for (let i = 0; i < nextLine; i++) {\n        nextLineStartPosition += poemLines[i].length + 1; // +1은 줄바꿈 문자\n      }\n\n      // 현재 입력에 줄바꿈 추가 (마지막 글자가 줄바꿈이 아니면)\n      let updatedInput = userInput;\n      if (!updatedInput.endsWith('\\n')) {\n        updatedInput = userInput + '\\n';\n        setUserInput(updatedInput);\n        setCurrentText(updatedInput);\n      }\n\n      // 현재 입력 위치 업데이트\n      setCurrentPosition(nextLineStartPosition);\n\n      // 포커스 유지\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  // 입력 위치가 변경될 때마다 라인 완성 체크\n  useEffect(() => {\n    checkLineCompletion();\n  }, [userInput, composing]);\n\n  // 입력 처리 함수 수정\n  const handleInput = e => {\n    const newValue = e.currentTarget.value;\n    setCurrentText(newValue);\n    setDebug(prev => ({\n      ...prev,\n      event: 'input',\n      value: newValue\n    }));\n    if (!composing) {\n      setUserInput(newValue);\n      setCurrentPosition(newValue.length);\n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n\n  // IME 조합이 시작될 때 호출됩니다\n  const handleCompositionStart = e => {\n    setComposing(true);\n    setDebug({\n      event: 'composition start',\n      data: e.data || ''\n    });\n  };\n\n  // IME 조합이 진행 중일 때 호출됩니다\n  const handleCompositionUpdate = e => {\n    setCurrentText(e.currentTarget.value);\n    setDebug({\n      event: 'composition update',\n      data: e.data || ''\n    });\n  };\n\n  // IME 조합이 완료될 때 호출됩니다\n  const handleCompositionEnd = e => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCurrentText(finalValue);\n    setUserInput(finalValue);\n    setCurrentPosition(finalValue.length);\n    setDebug({\n      event: 'composition end',\n      data: e.data || ''\n    });\n\n    // 조합이 끝난 후 자동으로 줄 완성 체크\n    setTimeout(() => {\n      checkLineCompletion();\n    }, 0);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n      setCurrentText(prev => prev.slice(0, -1));\n      setCurrentPosition(prev => Math.max(0, prev - 1));\n    }\n  };\n\n  // 렌더링 함수 수정\n  const renderOverlayText = () => {\n    const displayText = currentText;\n    const completedText = userInput;\n    const targetChars = currentPoem.content.split('');\n    return targetChars.map((char, i) => {\n      let status = 'waiting';\n      let displayChar = char;\n      const showCursor = i === currentPosition;\n\n      // 줄바꿈 문자 처리\n      if (char === '\\n') {\n        let lineBreakStatus = 'waiting';\n\n        // 이미 입력된 줄바꿈\n        if (i < completedText.length && completedText[i] === '\\n') {\n          lineBreakStatus = 'correct';\n        }\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative',\n            display: 'block',\n            height: '1.8em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: lineBreakStatus,\n            children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), showCursor && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 28\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this);\n      }\n\n      // 기본 상태는 '대기 중'\n      status = 'waiting';\n\n      // 이미 입력 완료된 글자 처리\n      if (i < completedText.length) {\n        // 입력된 텍스트와 타겟 텍스트 비교\n        if (isPartialMatch(char, completedText[i])) {\n          status = 'correct';\n        } else {\n          status = 'incorrect';\n        }\n        displayChar = completedText[i];\n      }\n      // 현재 조합 중인 글자 처리 (IME 조합 중)\n      else if (composing && i === currentPosition) {\n        // 조합 중인 글자는 텍스트 입력의 마지막 글자\n        if (displayText.length > completedText.length) {\n          const composedChar = displayText.substring(completedText.length);\n          if (composedChar) {\n            if (isPartialMatch(char, composedChar)) {\n              status = 'correct';\n            } else {\n              status = 'incorrect';\n            }\n            displayChar = composedChar;\n          }\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Char, {\n          status: status,\n          children: displayChar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), showCursor && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 26\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const progress = calculateProgress();\n\n  // 입력 필드에 포커스 유지를 위한 효과 추가\n  useEffect(() => {\n    const focusInterval = setInterval(() => {\n      if (inputRef.current && document.activeElement !== inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 500);\n    return () => clearInterval(focusInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onClick: () => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        textAlign: 'left',\n        fontSize: '0.8rem',\n        color: '#999'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC774\\uBCA4\\uD2B8: \", debug.event]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uB370\\uC774\\uD130: \", debug.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD604\\uC7AC \\uD14D\\uC2A4\\uD2B8: \", currentText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC644\\uB8CC\\uB41C \\uD14D\\uC2A4\\uD2B8: \", userInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC870\\uD569 \\uC911: \", composing ? 'true' : 'false']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD604\\uC7AC \\uC904: \", currentLine + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD604\\uC7AC \\uC704\\uCE58: \", currentPosition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BaseText, {\n          children: currentPoem.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverlayText, {\n          children: renderOverlayText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n        ref: inputRef,\n        value: currentText,\n        onChange: handleInput,\n        onCompositionStart: handleCompositionStart,\n        onCompositionUpdate: handleCompositionUpdate,\n        onCompositionEnd: handleCompositionEnd,\n        onKeyDown: handleKeyDown,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jotfcTrk6thlX8QdKEcoR/4nwwI=\");\n_c13 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"BaseText\");\n$RefreshReg$(_c6, \"OverlayText\");\n$RefreshReg$(_c7, \"Char\");\n$RefreshReg$(_c8, \"ProgressBar\");\n$RefreshReg$(_c9, \"Progress\");\n$RefreshReg$(_c10, \"CompletionMessage\");\n$RefreshReg$(_c11, \"HiddenInput\");\n$RefreshReg$(_c12, \"Cursor\");\n$RefreshReg$(_c13, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","BaseText","_c5","OverlayText","_c6","Char","span","props","status","_c7","ComposingChar","ProgressBar","_c8","Progress","width","_c9","CompletionMessage","show","_c10","HiddenInput","input","_c11","Cursor","_c12","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","CHOSEONG","decompose","jong","jung","cho","Math","floor","isPartialMatch","target","targetDecomp","length","inputDecomp","App","_s","userInput","setUserInput","completed","setCompleted","composing","setComposing","currentText","setCurrentText","debug","setDebug","event","data","currentPosition","setCurrentPosition","currentLine","setCurrentLine","inputRef","currentPoem","poemLines","split","calculateProgress","correctChars","filter","i","checkLineCompletion","lineStartPosition","lineContent","lastCharPosition","console","log","userInputLength","lastChar","targetLastChar","isCompleted","substring","currentLineInput","isCurrentLineCompleted","moveToNextLine","targetLinePart","nextLine","nextLineStartPosition","updatedInput","endsWith","current","focus","handleInput","e","newValue","currentTarget","value","prev","isCorrect","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","finalValue","setTimeout","handleKeyDown","key","preventDefault","slice","max","renderOverlayText","displayText","completedText","targetChars","map","displayChar","showCursor","lineBreakStatus","style","position","display","height","children","fileName","_jsxFileName","lineNumber","columnNumber","composedChar","progress","focusInterval","setInterval","document","activeElement","clearInterval","onClick","_inputRef$current","marginBottom","textAlign","fontSize","color","ref","onChange","onCompositionStart","onCompositionUpdate","onCompositionEnd","onKeyDown","autoFocus","_c13","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n`;\n\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return '#fff';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return 'transparent';\n    }\n  }};\n`;\n\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  margin-left: -1px;\n  margin-right: 1px;\n  vertical-align: middle;\n  animation: blink 1s step-end infinite;\n  position: relative;\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = (char: string) => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n\n  const jong = code % 28;\n  const jung = ((code - jong) / 28) % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 현재 입력이 목표의 일부인지 확인 (로직 개선)\nconst isPartialMatch = (target: string, input: string) => {\n  // 한글이 아니면 정확히 일치해야 함\n  if (!isKorean(target)) return target === input;\n  \n  // 완전히 일치하는 경우\n  if (target === input) return true;\n\n  // 초성만 입력된 경우 (예: 목표가 '사', 입력이 'ㅅ')\n  if (isChoseong(input)) {\n    const targetDecomp = decompose(target);\n    if (targetDecomp) {\n      return CHOSEONG[targetDecomp.cho] === input;\n    }\n  }\n  \n  // 종성까지 입력된 경우 (예: 목표가 '라', 입력이 '랄')\n  if (input.length === 1 && isKorean(input)) {\n    const inputDecomp = decompose(input);\n    const targetDecomp = decompose(target);\n    \n    if (inputDecomp && targetDecomp) {\n      // 초성과 중성이 일치하면 부분 일치로 간주\n      return inputDecomp.cho === targetDecomp.cho && \n             inputDecomp.jung === targetDecomp.jung;\n    }\n  }\n  \n  return false;\n};\n\nconst App: React.FC = () => {\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n  const [debug, setDebug] = useState({ event: '', data: '' });\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentLine, setCurrentLine] = useState(0);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentPoem = poems[0];\n  \n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n  \n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return (correctChars / currentPoem.content.length) * 100;\n  };\n\n  // 현재 줄이 완성되었는지 확인하는 함수\n  const checkLineCompletion = () => {\n    if (currentLine >= poemLines.length) return;\n    \n    // 현재 줄의 시작 위치 계산\n    let lineStartPosition = 0;\n    for (let i = 0; i < currentLine; i++) {\n      lineStartPosition += poemLines[i].length + 1; // +1은 줄바꿈 문자\n    }\n    \n    // 현재 줄의 내용과 길이\n    const lineContent = poemLines[currentLine];\n    \n    // 현재 줄의 마지막 글자 위치\n    const lastCharPosition = lineStartPosition + lineContent.length - 1;\n    \n    // 디버그 로그 추가\n    console.log({\n      currentLine,\n      lineContent,\n      userInputLength: userInput.length,\n      lastCharPosition,\n      lastChar: userInput[lastCharPosition],\n      targetLastChar: lineContent[lineContent.length - 1],\n      isCompleted: userInput.substring(lineStartPosition, lineStartPosition + lineContent.length) === lineContent\n    });\n    \n    // 사용자가 입력한 현재 줄의 내용\n    if (userInput.length >= lineStartPosition + lineContent.length) {\n      const currentLineInput = userInput.substring(\n        lineStartPosition,\n        lineStartPosition + lineContent.length\n      );\n      \n      // 현재 줄이 완료되었는지 확인\n      const isCurrentLineCompleted = currentLineInput === lineContent;\n      \n      // 현재 줄을 정확히 입력했고, 조합 중이 아니면 다음 줄로 이동\n      if (isCurrentLineCompleted && !composing) {\n        moveToNextLine();\n      }\n    } else if (userInput.length > lastCharPosition && !composing) {\n      // 마지막 글자까지 입력했는지 확인\n      const currentLineInput = userInput.substring(lineStartPosition, userInput.length);\n      const targetLinePart = lineContent.substring(0, currentLineInput.length);\n      \n      // 지금까지 입력한 부분이 일치하고, 마지막 글자가 완성되었으면 다음 줄로 이동\n      if (currentLineInput === targetLinePart && \n          userInput.length === lastCharPosition + 1 && \n          userInput[lastCharPosition] === lineContent[lineContent.length - 1]) {\n        moveToNextLine();\n      }\n    }\n  };\n\n  // 다음 줄로 이동하는 함수\n  const moveToNextLine = () => {\n    if (currentLine < poemLines.length - 1) {\n      console.log(\"Moving to next line\", currentLine + 1);\n      // 다음 줄로 이동\n      const nextLine = currentLine + 1;\n      setCurrentLine(nextLine);\n      \n      // 다음 줄의 시작 위치 계산\n      let nextLineStartPosition = 0;\n      for (let i = 0; i < nextLine; i++) {\n        nextLineStartPosition += poemLines[i].length + 1; // +1은 줄바꿈 문자\n      }\n      \n      // 현재 입력에 줄바꿈 추가 (마지막 글자가 줄바꿈이 아니면)\n      let updatedInput = userInput;\n      if (!updatedInput.endsWith('\\n')) {\n        updatedInput = userInput + '\\n';\n        setUserInput(updatedInput);\n        setCurrentText(updatedInput);\n      }\n      \n      // 현재 입력 위치 업데이트\n      setCurrentPosition(nextLineStartPosition);\n      \n      // 포커스 유지\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  // 입력 위치가 변경될 때마다 라인 완성 체크\n  useEffect(() => {\n    checkLineCompletion();\n  }, [userInput, composing]);\n\n  // 입력 처리 함수 수정\n  const handleInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    setCurrentText(newValue);\n    setDebug(prev => ({ ...prev, event: 'input', value: newValue }));\n    \n    if (!composing) {\n      setUserInput(newValue);\n      setCurrentPosition(newValue.length);\n      \n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n\n  // IME 조합이 시작될 때 호출됩니다\n  const handleCompositionStart = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setComposing(true);\n    setDebug({ event: 'composition start', data: e.data || '' });\n  };\n\n  // IME 조합이 진행 중일 때 호출됩니다\n  const handleCompositionUpdate = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setCurrentText(e.currentTarget.value);\n    setDebug({ event: 'composition update', data: e.data || '' });\n  };\n\n  // IME 조합이 완료될 때 호출됩니다\n  const handleCompositionEnd = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCurrentText(finalValue);\n    setUserInput(finalValue);\n    setCurrentPosition(finalValue.length);\n    setDebug({ event: 'composition end', data: e.data || '' });\n    \n    // 조합이 끝난 후 자동으로 줄 완성 체크\n    setTimeout(() => {\n      checkLineCompletion();\n    }, 0);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n      setCurrentText(prev => prev.slice(0, -1));\n      setCurrentPosition(prev => Math.max(0, prev - 1));\n    }\n  };\n\n  // 렌더링 함수 수정\n  const renderOverlayText = () => {\n    const displayText = currentText;\n    const completedText = userInput;\n    const targetChars = currentPoem.content.split('');\n    \n    return targetChars.map((char, i) => {\n      let status: 'correct' | 'incorrect' | 'waiting' = 'waiting';\n      let displayChar = char;\n      const showCursor = i === currentPosition;\n      \n      // 줄바꿈 문자 처리\n      if (char === '\\n') {\n        let lineBreakStatus = 'waiting';\n        \n        // 이미 입력된 줄바꿈\n        if (i < completedText.length && completedText[i] === '\\n') {\n          lineBreakStatus = 'correct';\n        }\n        \n        return (\n          <span key={i} style={{ position: 'relative', display: 'block', height: '1.8em' }}>\n            <Char status={lineBreakStatus as 'correct' | 'incorrect' | 'waiting'}>\n              <br />\n            </Char>\n            {showCursor && <Cursor />}\n          </span>\n        );\n      }\n      \n      // 기본 상태는 '대기 중'\n      status = 'waiting';\n      \n      // 이미 입력 완료된 글자 처리\n      if (i < completedText.length) {\n        // 입력된 텍스트와 타겟 텍스트 비교\n        if (isPartialMatch(char, completedText[i])) {\n          status = 'correct';\n        } else {\n          status = 'incorrect';\n        }\n        displayChar = completedText[i];\n      } \n      // 현재 조합 중인 글자 처리 (IME 조합 중)\n      else if (composing && i === currentPosition) {\n        // 조합 중인 글자는 텍스트 입력의 마지막 글자\n        if (displayText.length > completedText.length) {\n          const composedChar = displayText.substring(completedText.length);\n          if (composedChar) {\n            if (isPartialMatch(char, composedChar)) {\n              status = 'correct';\n            } else {\n              status = 'incorrect';\n            }\n            displayChar = composedChar;\n          }\n        }\n      }\n      \n      return (\n        <span key={i} style={{ position: 'relative' }}>\n          <Char status={status}>\n            {displayChar}\n          </Char>\n          {showCursor && <Cursor />}\n        </span>\n      );\n    });\n  };\n\n  const progress = calculateProgress();\n\n  // 입력 필드에 포커스 유지를 위한 효과 추가\n  useEffect(() => {\n    const focusInterval = setInterval(() => {\n      if (inputRef.current && document.activeElement !== inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 500);\n    \n    return () => clearInterval(focusInterval);\n  }, []);\n\n  return (\n    <AppContainer onClick={() => inputRef.current?.focus()}>\n      <Title>시 타이핑 연습</Title>\n      {/* 디버그 정보 표시 */}\n      <div style={{ marginBottom: '1rem', textAlign: 'left', fontSize: '0.8rem', color: '#999' }}>\n        <div>이벤트: {debug.event}</div>\n        <div>데이터: {debug.data}</div>\n        <div>현재 텍스트: {currentText}</div>\n        <div>완료된 텍스트: {userInput}</div>\n        <div>조합 중: {composing ? 'true' : 'false'}</div>\n        <div>현재 줄: {currentLine + 1}</div>\n        <div>현재 위치: {currentPosition}</div>\n      </div>\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          <BaseText>{currentPoem.content}</BaseText>\n          <OverlayText>{renderOverlayText()}</OverlayText>\n        </TextContainer>\n        <HiddenInput\n          ref={inputRef}\n          value={currentText}\n          onChange={handleInput}\n          onCompositionStart={handleCompositionStart}\n          onCompositionUpdate={handleCompositionUpdate}\n          onCompositionEnd={handleCompositionEnd}\n          onKeyDown={handleKeyDown}\n          autoFocus\n        />\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}