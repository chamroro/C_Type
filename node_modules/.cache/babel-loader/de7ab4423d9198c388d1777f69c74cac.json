{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n// 글꼴 추가\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'BookkMyungjo-Bd';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302@1.0/BookkMyungjo-Bd.woff2') format('woff2');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'MaruBuri';\n    src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot);\n    src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot?#iefix) format(\"embedded-opentype\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff2) format(\"woff2\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff) format(\"woff\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.ttf) format(\"truetype\");\n  }\n\n  @font-face {\n    font-family: 'intelone-mono-font-family-italic';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2307-1@1.1/intelone-mono-font-family-italic.woff2') format('woff2');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'Shilla_CultureB-Bold';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2206-02@1.0/Shilla_CultureB-Bold.woff2') format('woff2');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'YESMyoungjo-Regular';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_13@1.0/YESMyoungjo-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'MapoFlowerIsland';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/MapoFlowerIslandA.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n`;\n_c = GlobalStyle;\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: rgb(255, 255, 255);\n  min-height: 100vh;\n  color: #000;\n`;\n_c2 = AppContainer;\nconst Title = styled.h1`\n  color: black;\n  margin-bottom: 1rem;\n`;\n_c3 = Title;\nconst FontSelectorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n_c4 = FontSelectorContainer;\nconst FontChip = styled.button`\n  padding: 8px 16px;\n  border-radius: 50px;\n  background-color: ${props => props.isSelected ? '#333' : '#f0f0f0'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  border: 1px solid #ddd;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.isSelected ? '#555' : '#e0e0e0'};\n  }\n  \n  /* 각 폰트마다 실제 폰트를 미리보기로 적용 */\n  &.BookkMyungjo-Bd {\n    font-family: 'BookkMyungjo-Bd', serif;\n  }\n  \n  &.MaruBuri {\n    font-family: 'MaruBuri', serif;\n  }\n  \n  &.intelone-mono-font-family-italic {\n    font-family: 'intelone-mono-font-family-italic', monospace;\n  }\n  \n  &.Shilla_CultureB-Bold {\n    font-family: 'Shilla_CultureB-Bold', serif;\n  }\n  \n  &.YESMyoungjo-Regular {\n    font-family: 'YESMyoungjo-Regular', serif;\n  }\n  \n  &.MapoFlowerIsland {\n    font-family: 'MapoFlowerIsland', serif;\n  }\n`;\n_c5 = FontChip;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c6 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: ${props => props.fontFamily}, monospace;\n`;\n_c7 = TextContainer;\nconst LineContainer = styled.div`\n  position: relative;\n  height: 1.8em;\n  margin-bottom: 0.2em;\n`;\n_c8 = LineContainer;\nconst BaseLine = styled.div`\n  white-space: pre;\n  color: lightgray;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: ${props => props.fontFamily}, monospace;\n`;\n_c9 = BaseLine;\nconst InputLine = styled.input`\n  width: 100%;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: ${props => props.fontFamily}, monospace;\n  background: transparent;\n  border: none;\n  outline: none;\n  color: transparent;\n  caret-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0;\n`;\n_c10 = InputLine;\nconst OverlayLine = styled.div`\n  white-space: pre;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: ${props => props.fontFamily}, monospace;\n  pointer-events: none;\n`;\n_c11 = OverlayLine;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return 'black';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return 'transparent';\n    case 'composing':\n      return 'black';\n    // 조합 중인 글자는 연한 녹색\n  }\n}};\n`;\n_c12 = Char;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c13 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c14 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n  color: white;\n`;\n\n// 폰트 옵션 정의\n_c15 = CompletionMessage;\nconst fontOptions = [{\n  id: 'BookkMyungjo-Bd',\n  name: '부크크 명조'\n}, {\n  id: 'MaruBuri',\n  name: '마루부리'\n}, {\n  id: 'intelone-mono-font-family-italic',\n  name: 'Intel One Mono'\n}, {\n  id: 'Shilla_CultureB-Bold',\n  name: '신라문화체'\n}, {\n  id: 'YESMyoungjo-Regular',\n  name: '예스 명조'\n}, {\n  id: 'MapoFlowerIsland',\n  name: '마포꽃섬'\n}];\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\nconst App = () => {\n  _s();\n  const currentPoem = poems[0];\n  const poemLines = currentPoem.content.split('\\n');\n\n  // 각 줄별 상태 관리\n  const [lineInputs, setLineInputs] = useState(Array(poemLines.length).fill(''));\n  const [activeLineIndex, setActiveLineIndex] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [composingLine, setComposingLine] = useState(null);\n  // 선택된 폰트 상태 추가\n  const [selectedFont, setSelectedFont] = useState(fontOptions[0].id);\n\n  // 각 줄의 입력 필드에 대한 ref 생성\n  const lineRefs = useRef(Array(poemLines.length).fill(null).map(() => /*#__PURE__*/createRef()));\n\n  // 진행 상황 계산\n  const calculateProgress = () => {\n    let correctChars = 0;\n    let totalChars = 0;\n    poemLines.forEach((line, index) => {\n      const input = lineInputs[index] || '';\n      for (let i = 0; i < Math.min(line.length, input.length); i++) {\n        if (line[i] === input[i]) {\n          correctChars++;\n        }\n      }\n      totalChars += line.length;\n    });\n    return correctChars / totalChars * 100;\n  };\n\n  // 줄 입력 처리\n  const handleLineInput = (index, value) => {\n    const newLineInputs = [...lineInputs];\n    newLineInputs[index] = value;\n    setLineInputs(newLineInputs);\n\n    // 현재 줄이 완성되었는지 확인\n    const currentLine = poemLines[index];\n    if (value === currentLine && index < poemLines.length - 1) {\n      // 다음 줄로 자동 이동 (약간의 지연 추가)\n      setTimeout(() => {\n        var _lineRefs$current$cur;\n        setActiveLineIndex(index + 1);\n        (_lineRefs$current$cur = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur === void 0 ? void 0 : _lineRefs$current$cur.focus();\n      }, 100);\n    }\n\n    // 전체 완성 여부 확인\n    checkCompletion(newLineInputs);\n  };\n\n  // 키 이벤트 처리\n  const handleKeyDown = (e, index) => {\n    // 엔터키 처리\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      // 마지막 줄이 아니면 다음 줄로 이동\n      if (index < poemLines.length - 1) {\n        var _lineRefs$current$cur2;\n        setActiveLineIndex(index + 1);\n        (_lineRefs$current$cur2 = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur2 === void 0 ? void 0 : _lineRefs$current$cur2.focus();\n      }\n    }\n    // 백스페이스 처리 - 현재 줄의 맨 앞에서 누르면 이전 줄로 이동\n    else if (e.key === 'Backspace' && index > 0) {\n      const cursorPosition = e.currentTarget.selectionStart;\n      if (cursorPosition === 0) {\n        e.preventDefault(); // 기본 백스페이스 동작 방지\n\n        // 이전 줄로 이동\n        const prevIndex = index - 1;\n        setActiveLineIndex(prevIndex);\n\n        // 이전 줄의 입력 필드에 포커스, 커서를 이전 줄의 텍스트 끝으로 이동\n        setTimeout(() => {\n          const prevInput = lineRefs.current[prevIndex].current;\n          if (prevInput) {\n            prevInput.focus();\n            const prevText = lineInputs[prevIndex] || '';\n            prevInput.selectionStart = prevText.length;\n            prevInput.selectionEnd = prevText.length;\n          }\n        }, 0);\n      }\n    }\n    // 위 화살표 처리\n    else if (e.key === 'ArrowUp' && index > 0) {\n      var _lineRefs$current$cur3;\n      e.preventDefault();\n      setActiveLineIndex(index - 1);\n      (_lineRefs$current$cur3 = lineRefs.current[index - 1].current) === null || _lineRefs$current$cur3 === void 0 ? void 0 : _lineRefs$current$cur3.focus();\n    }\n    // 아래 화살표 처리\n    else if (e.key === 'ArrowDown' && index < poemLines.length - 1) {\n      var _lineRefs$current$cur4;\n      e.preventDefault();\n      setActiveLineIndex(index + 1);\n      (_lineRefs$current$cur4 = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur4 === void 0 ? void 0 : _lineRefs$current$cur4.focus();\n    }\n  };\n\n  // 조합 이벤트 처리\n  const handleCompositionStart = index => {\n    setComposingLine(index);\n  };\n  const handleCompositionEnd = () => {\n    setComposingLine(null);\n  };\n\n  // 완성 여부 확인\n  const checkCompletion = inputs => {\n    if (inputs.length !== poemLines.length) return false;\n    const allComplete = poemLines.every((line, i) => line === inputs[i]);\n    setCompleted(allComplete);\n    return allComplete;\n  };\n\n  // 폰트 변경 핸들러\n  const handleFontChange = fontId => {\n    setSelectedFont(fontId);\n  };\n\n  // 줄 렌더링\n  const renderLine = (line, index) => {\n    const input = lineInputs[index] || '';\n    const isActive = index === activeLineIndex;\n    const isComposing = index === composingLine;\n\n    // 각 글자 렌더링\n    const chars = line.split('').map((char, i) => {\n      // 입력된 글자가 있는 경우\n      if (i < input.length) {\n        // 조합 중이고 마지막 글자일 경우\n        if (isComposing && i === input.length - 1) {\n          return /*#__PURE__*/_jsxDEV(Char, {\n            status: \"composing\",\n            children: input[i]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this);\n        }\n\n        // 일치 여부에 따라 스타일 결정\n        const status = char === input[i] ? 'correct' : 'incorrect';\n        return /*#__PURE__*/_jsxDEV(Char, {\n          status: status,\n          children: input[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this);\n      }\n\n      // 입력되지 않은 글자는 기다림 상태\n      return /*#__PURE__*/_jsxDEV(Char, {\n        status: \"waiting\",\n        children: char\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(LineContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BaseLine, {\n        fontFamily: selectedFont,\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLine, {\n        ref: lineRefs.current[index],\n        value: input,\n        onChange: e => handleLineInput(index, e.target.value),\n        onKeyDown: e => handleKeyDown(e, index),\n        onCompositionStart: () => handleCompositionStart(index),\n        onCompositionEnd: handleCompositionEnd,\n        disabled: !isActive,\n        autoFocus: isActive && index === 0,\n        spellCheck: false,\n        autoComplete: \"off\",\n        \"data-line-index\": index,\n        fontFamily: selectedFont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverlayLine, {\n        fontFamily: selectedFont,\n        children: chars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 초기 포커스 설정\n  useEffect(() => {\n    var _lineRefs$current$act;\n    (_lineRefs$current$act = lineRefs.current[activeLineIndex].current) === null || _lineRefs$current$act === void 0 ? void 0 : _lineRefs$current$act.focus();\n  }, [activeLineIndex]);\n  const progress = calculateProgress();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC2DC\\uB85C(\\u8A69\\u8DEF)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontSelectorContainer, {\n        children: fontOptions.map(font => /*#__PURE__*/_jsxDEV(FontChip, {\n          isSelected: selectedFont === font.id,\n          onClick: () => handleFontChange(font.id),\n          className: font.id,\n          children: font.name\n        }, font.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          width: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n        children: /*#__PURE__*/_jsxDEV(TextContainer, {\n          fontFamily: selectedFont,\n          children: poemLines.map((line, i) => renderLine(line, i))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n        show: completed,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"1sokBhqeFr+Q5fHXAA5/jvc1O4A=\");\n_c16 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"FontSelectorContainer\");\n$RefreshReg$(_c5, \"FontChip\");\n$RefreshReg$(_c6, \"TypingArea\");\n$RefreshReg$(_c7, \"TextContainer\");\n$RefreshReg$(_c8, \"LineContainer\");\n$RefreshReg$(_c9, \"BaseLine\");\n$RefreshReg$(_c10, \"InputLine\");\n$RefreshReg$(_c11, \"OverlayLine\");\n$RefreshReg$(_c12, \"Char\");\n$RefreshReg$(_c13, \"ProgressBar\");\n$RefreshReg$(_c14, \"Progress\");\n$RefreshReg$(_c15, \"CompletionMessage\");\n$RefreshReg$(_c16, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createRef","styled","createGlobalStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStyle","_c","AppContainer","div","_c2","Title","h1","_c3","FontSelectorContainer","_c4","FontChip","button","props","isSelected","_c5","TypingArea","_c6","TextContainer","fontFamily","_c7","LineContainer","_c8","BaseLine","_c9","InputLine","input","_c10","OverlayLine","_c11","Char","span","status","_c12","ProgressBar","_c13","Progress","width","_c14","CompletionMessage","show","_c15","fontOptions","id","name","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","App","_s","currentPoem","poemLines","split","lineInputs","setLineInputs","Array","length","fill","activeLineIndex","setActiveLineIndex","completed","setCompleted","composingLine","setComposingLine","selectedFont","setSelectedFont","lineRefs","map","calculateProgress","correctChars","totalChars","forEach","line","index","i","Math","min","handleLineInput","value","newLineInputs","currentLine","setTimeout","_lineRefs$current$cur","current","focus","checkCompletion","handleKeyDown","e","key","preventDefault","_lineRefs$current$cur2","cursorPosition","currentTarget","selectionStart","prevIndex","prevInput","prevText","selectionEnd","_lineRefs$current$cur3","_lineRefs$current$cur4","handleCompositionStart","handleCompositionEnd","inputs","allComplete","every","handleFontChange","fontId","renderLine","isActive","isComposing","chars","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","target","onKeyDown","onCompositionStart","onCompositionEnd","disabled","autoFocus","spellCheck","autoComplete","_lineRefs$current$act","progress","font","onClick","className","_c16","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, createRef, RefObject } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n// 글꼴 추가\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'BookkMyungjo-Bd';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2302@1.0/BookkMyungjo-Bd.woff2') format('woff2');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'MaruBuri';\n    src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot);\n    src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot?#iefix) format(\"embedded-opentype\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff2) format(\"woff2\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff) format(\"woff\"), \n         url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.ttf) format(\"truetype\");\n  }\n\n  @font-face {\n    font-family: 'intelone-mono-font-family-italic';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2307-1@1.1/intelone-mono-font-family-italic.woff2') format('woff2');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'Shilla_CultureB-Bold';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2206-02@1.0/Shilla_CultureB-Bold.woff2') format('woff2');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'YESMyoungjo-Regular';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_13@1.0/YESMyoungjo-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'MapoFlowerIsland';\n    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/MapoFlowerIslandA.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n`;\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: rgb(255, 255, 255);\n  min-height: 100vh;\n  color: #000;\n`;\n\nconst Title = styled.h1`\n  color: black;\n  margin-bottom: 1rem;\n`;\n\nconst FontSelectorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst FontChip = styled.button<{ isSelected: boolean }>`\n  padding: 8px 16px;\n  border-radius: 50px;\n  background-color: ${props => props.isSelected ? '#333' : '#f0f0f0'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  border: 1px solid #ddd;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: ${props => props.isSelected ? '#555' : '#e0e0e0'};\n  }\n  \n  /* 각 폰트마다 실제 폰트를 미리보기로 적용 */\n  &.BookkMyungjo-Bd {\n    font-family: 'BookkMyungjo-Bd', serif;\n  }\n  \n  &.MaruBuri {\n    font-family: 'MaruBuri', serif;\n  }\n  \n  &.intelone-mono-font-family-italic {\n    font-family: 'intelone-mono-font-family-italic', monospace;\n  }\n  \n  &.Shilla_CultureB-Bold {\n    font-family: 'Shilla_CultureB-Bold', serif;\n  }\n  \n  &.YESMyoungjo-Regular {\n    font-family: 'YESMyoungjo-Regular', serif;\n  }\n  \n  &.MapoFlowerIsland {\n    font-family: 'MapoFlowerIsland', serif;\n  }\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div<{ fontFamily: string }>`\n  position: relative;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: ${props => props.fontFamily}, monospace;\n`;\n\nconst LineContainer = styled.div`\n  position: relative;\n  height: 1.8em;\n  margin-bottom: 0.2em;\n`;\n\nconst BaseLine = styled.div<{ fontFamily: string }>`\n  white-space: pre;\n  color: lightgray;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: ${props => props.fontFamily}, monospace;\n`;\n\nconst InputLine = styled.input<{ fontFamily: string }>`\n  width: 100%;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: ${props => props.fontFamily}, monospace;\n  background: transparent;\n  border: none;\n  outline: none;\n  color: transparent;\n  caret-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0;\n`;\n\nconst OverlayLine = styled.div<{ fontFamily: string }>`\n  white-space: pre;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: ${props => props.fontFamily}, monospace;\n  pointer-events: none;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' | 'composing' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return 'black';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return 'transparent';\n      case 'composing': return 'black'; // 조합 중인 글자는 연한 녹색\n    }\n  }};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n  color: white;\n`;\n\n// 폰트 옵션 정의\nconst fontOptions = [\n  { id: 'BookkMyungjo-Bd', name: '부크크 명조' },\n  { id: 'MaruBuri', name: '마루부리' },\n  { id: 'intelone-mono-font-family-italic', name: 'Intel One Mono' },\n  { id: 'Shilla_CultureB-Bold', name: '신라문화체' },\n  { id: 'YESMyoungjo-Regular', name: '예스 명조' },\n  { id: 'MapoFlowerIsland', name: '마포꽃섬' }\n];\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\nconst App: React.FC = () => {\n  const currentPoem = poems[0];\n  const poemLines = currentPoem.content.split('\\n');\n  \n  // 각 줄별 상태 관리\n  const [lineInputs, setLineInputs] = useState<string[]>(Array(poemLines.length).fill(''));\n  const [activeLineIndex, setActiveLineIndex] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [composingLine, setComposingLine] = useState<number | null>(null);\n  // 선택된 폰트 상태 추가\n  const [selectedFont, setSelectedFont] = useState(fontOptions[0].id);\n  \n  // 각 줄의 입력 필드에 대한 ref 생성\n  const lineRefs = useRef<RefObject<HTMLInputElement>[]>(\n    Array(poemLines.length).fill(null).map(() => createRef<HTMLInputElement>())\n  );\n  \n  // 진행 상황 계산\n  const calculateProgress = () => {\n    let correctChars = 0;\n    let totalChars = 0;\n    \n    poemLines.forEach((line, index) => {\n      const input = lineInputs[index] || '';\n      for (let i = 0; i < Math.min(line.length, input.length); i++) {\n        if (line[i] === input[i]) {\n          correctChars++;\n        }\n      }\n      totalChars += line.length;\n    });\n    \n    return (correctChars / totalChars) * 100;\n  };\n  \n  // 줄 입력 처리\n  const handleLineInput = (index: number, value: string) => {\n    const newLineInputs = [...lineInputs];\n    newLineInputs[index] = value;\n    setLineInputs(newLineInputs);\n    \n    // 현재 줄이 완성되었는지 확인\n    const currentLine = poemLines[index];\n    if (value === currentLine && index < poemLines.length - 1) {\n      // 다음 줄로 자동 이동 (약간의 지연 추가)\n      setTimeout(() => {\n        setActiveLineIndex(index + 1);\n        lineRefs.current[index + 1].current?.focus();\n      }, 100);\n    }\n    \n    // 전체 완성 여부 확인\n    checkCompletion(newLineInputs);\n  };\n  \n  // 키 이벤트 처리\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n    // 엔터키 처리\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      \n      // 마지막 줄이 아니면 다음 줄로 이동\n      if (index < poemLines.length - 1) {\n        setActiveLineIndex(index + 1);\n        lineRefs.current[index + 1].current?.focus();\n      }\n    }\n    // 백스페이스 처리 - 현재 줄의 맨 앞에서 누르면 이전 줄로 이동\n    else if (e.key === 'Backspace' && index > 0) {\n      const cursorPosition = e.currentTarget.selectionStart;\n      if (cursorPosition === 0) {\n        e.preventDefault(); // 기본 백스페이스 동작 방지\n        \n        // 이전 줄로 이동\n        const prevIndex = index - 1;\n        setActiveLineIndex(prevIndex);\n        \n        // 이전 줄의 입력 필드에 포커스, 커서를 이전 줄의 텍스트 끝으로 이동\n        setTimeout(() => {\n          const prevInput = lineRefs.current[prevIndex].current;\n          if (prevInput) {\n            prevInput.focus();\n            const prevText = lineInputs[prevIndex] || '';\n            prevInput.selectionStart = prevText.length;\n            prevInput.selectionEnd = prevText.length;\n          }\n        }, 0);\n      }\n    }\n    // 위 화살표 처리\n    else if (e.key === 'ArrowUp' && index > 0) {\n      e.preventDefault();\n      setActiveLineIndex(index - 1);\n      lineRefs.current[index - 1].current?.focus();\n    }\n    // 아래 화살표 처리\n    else if (e.key === 'ArrowDown' && index < poemLines.length - 1) {\n      e.preventDefault();\n      setActiveLineIndex(index + 1);\n      lineRefs.current[index + 1].current?.focus();\n    }\n  };\n  \n  // 조합 이벤트 처리\n  const handleCompositionStart = (index: number) => {\n    setComposingLine(index);\n  };\n  \n  const handleCompositionEnd = () => {\n    setComposingLine(null);\n  };\n  \n  // 완성 여부 확인\n  const checkCompletion = (inputs: string[]) => {\n    if (inputs.length !== poemLines.length) return false;\n    \n    const allComplete = poemLines.every((line, i) => line === inputs[i]);\n    setCompleted(allComplete);\n    return allComplete;\n  };\n  \n  // 폰트 변경 핸들러\n  const handleFontChange = (fontId: string) => {\n    setSelectedFont(fontId);\n  };\n  \n  // 줄 렌더링\n  const renderLine = (line: string, index: number) => {\n    const input = lineInputs[index] || '';\n    const isActive = index === activeLineIndex;\n    const isComposing = index === composingLine;\n    \n    // 각 글자 렌더링\n    const chars = line.split('').map((char, i) => {\n      // 입력된 글자가 있는 경우\n      if (i < input.length) {\n        // 조합 중이고 마지막 글자일 경우\n        if (isComposing && i === input.length - 1) {\n          return (\n            <Char key={i} status=\"composing\">\n              {input[i]}\n            </Char>\n          );\n        }\n        \n        // 일치 여부에 따라 스타일 결정\n        const status = char === input[i] ? 'correct' : 'incorrect';\n        return (\n          <Char key={i} status={status}>\n            {input[i]}\n          </Char>\n        );\n      }\n      \n      // 입력되지 않은 글자는 기다림 상태\n      return (\n        <Char key={i} status=\"waiting\">\n          {char}\n        </Char>\n      );\n    });\n    \n    return (\n      <LineContainer key={index}>\n        <BaseLine fontFamily={selectedFont}>{line}</BaseLine>\n        <InputLine\n          ref={lineRefs.current[index]}\n          value={input}\n          onChange={(e) => handleLineInput(index, e.target.value)}\n          onKeyDown={(e) => handleKeyDown(e, index)}\n          onCompositionStart={() => handleCompositionStart(index)}\n          onCompositionEnd={handleCompositionEnd}\n          disabled={!isActive}\n          autoFocus={isActive && index === 0}\n          spellCheck={false}\n          autoComplete=\"off\"\n          data-line-index={index}\n          fontFamily={selectedFont}\n        />\n        <OverlayLine fontFamily={selectedFont}>{chars}</OverlayLine>\n      </LineContainer>\n    );\n  };\n  \n  // 초기 포커스 설정\n  useEffect(() => {\n    lineRefs.current[activeLineIndex].current?.focus();\n  }, [activeLineIndex]);\n  \n  const progress = calculateProgress();\n  \n  return (\n    <>\n      <GlobalStyle />\n      <AppContainer>\n        <Title>시로(詩路)</Title>\n        \n        {/* 폰트 선택 UI */}\n        <FontSelectorContainer>\n          {fontOptions.map(font => (\n            <FontChip \n              key={font.id}\n              isSelected={selectedFont === font.id}\n              onClick={() => handleFontChange(font.id)}\n              className={font.id}\n            >\n              {font.name}\n            </FontChip>\n          ))}\n        </FontSelectorContainer>\n        \n        <ProgressBar>\n          <Progress width={progress} />\n        </ProgressBar>\n        <TypingArea>\n          <TextContainer fontFamily={selectedFont}>\n            {poemLines.map((line, i) => renderLine(line, i))}\n          </TextContainer>\n        </TypingArea>\n        <CompletionMessage show={completed}>\n          <h2>🎉 축하합니다! 🎉</h2>\n          <p>성공적으로 시를 완성하셨습니다!</p>\n        </CompletionMessage>\n      </AppContainer>\n    </>\n  );\n};\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,SAAS,QAAmB,OAAO;AAChF,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,WAAW,GAAGL,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,EAAA,GA5CID,WAAW;AA8CjB,MAAME,YAAY,GAAGR,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,YAAY;AAUlB,MAAMG,KAAK,GAAGX,MAAM,CAACY,EAAE;AACvB;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,qBAAqB,GAAGd,MAAM,CAACS,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GANID,qBAAqB;AAQ3B,MAAME,QAAQ,GAAGhB,MAAM,CAACiB,MAA+B;AACvD;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,MAAM,GAAG,SAAS;AACpE,WAAWD,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,OAAO,GAAG,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,MAAM,GAAG,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAtCIJ,QAAQ;AAwCd,MAAMK,UAAU,GAAGrB,MAAM,CAACS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","ignoreList":[]},"metadata":{},"sourceType":"module"}