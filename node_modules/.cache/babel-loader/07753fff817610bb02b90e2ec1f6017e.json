{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: rgb(255, 255, 255);\n  min-height: 100vh;\n  color: #000;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: black;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst LineContainer = styled.div`\n  position: relative;\n  height: 1.8em;\n  margin-bottom: 0.2em;\n`;\n_c5 = LineContainer;\nconst BaseLine = styled.div`\n  white-space: pre;\n  color: lightgray;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: monospace;\n`;\n_c6 = BaseLine;\nconst InputLine = styled.input`\n  width: 100%;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: monospace;\n  background: transparent;\n  border: none;\n  outline: none;\n  color: transparent;\n  caret-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0;\n`;\n_c7 = InputLine;\nconst OverlayLine = styled.div`\n  white-space: pre;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: monospace;\n  pointer-events: none;\n`;\n_c8 = OverlayLine;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return 'black';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return 'transparent';\n    case 'composing':\n      return '#aaffaa';\n    // 조합 중인 글자는 연한 녹색\n  }\n}};\n`;\n_c9 = Char;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c10 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c11 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n  color: white;\n`;\n_c12 = CompletionMessage;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\nconst App = () => {\n  _s();\n  const currentPoem = poems[0];\n  const poemLines = currentPoem.content.split('\\n');\n\n  // 각 줄별 상태 관리\n  const [lineInputs, setLineInputs] = useState(Array(poemLines.length).fill(''));\n  const [activeLineIndex, setActiveLineIndex] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [composingLine, setComposingLine] = useState(null);\n\n  // 각 줄의 입력 필드에 대한 ref 생성\n  const lineRefs = useRef(Array(poemLines.length).fill(null).map(() => /*#__PURE__*/createRef()));\n\n  // 진행 상황 계산\n  const calculateProgress = () => {\n    let correctChars = 0;\n    let totalChars = 0;\n    poemLines.forEach((line, index) => {\n      const input = lineInputs[index] || '';\n      for (let i = 0; i < Math.min(line.length, input.length); i++) {\n        if (line[i] === input[i]) {\n          correctChars++;\n        }\n      }\n      totalChars += line.length;\n    });\n    return correctChars / totalChars * 100;\n  };\n\n  // 줄 입력 처리\n  const handleLineInput = (index, value) => {\n    const newLineInputs = [...lineInputs];\n    newLineInputs[index] = value;\n    setLineInputs(newLineInputs);\n\n    // 현재 줄이 완성되었는지 확인\n    const currentLine = poemLines[index];\n    if (value === currentLine && index < poemLines.length - 1) {\n      // 다음 줄로 자동 이동 (약간의 지연 추가)\n      setTimeout(() => {\n        var _lineRefs$current$cur;\n        setActiveLineIndex(index + 1);\n        (_lineRefs$current$cur = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur === void 0 ? void 0 : _lineRefs$current$cur.focus();\n      }, 100);\n    }\n\n    // 전체 완성 여부 확인\n    checkCompletion(newLineInputs);\n  };\n\n  // 키 이벤트 처리\n  const handleKeyDown = (e, index) => {\n    // 엔터키 처리\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      // 마지막 줄이 아니면 다음 줄로 이동\n      if (index < poemLines.length - 1) {\n        var _lineRefs$current$cur2;\n        setActiveLineIndex(index + 1);\n        (_lineRefs$current$cur2 = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur2 === void 0 ? void 0 : _lineRefs$current$cur2.focus();\n      }\n    }\n    // 위 화살표 처리\n    else if (e.key === 'ArrowUp' && index > 0) {\n      var _lineRefs$current$cur3;\n      e.preventDefault();\n      setActiveLineIndex(index - 1);\n      (_lineRefs$current$cur3 = lineRefs.current[index - 1].current) === null || _lineRefs$current$cur3 === void 0 ? void 0 : _lineRefs$current$cur3.focus();\n    }\n    // 아래 화살표 처리\n    else if (e.key === 'ArrowDown' && index < poemLines.length - 1) {\n      var _lineRefs$current$cur4;\n      e.preventDefault();\n      setActiveLineIndex(index + 1);\n      (_lineRefs$current$cur4 = lineRefs.current[index + 1].current) === null || _lineRefs$current$cur4 === void 0 ? void 0 : _lineRefs$current$cur4.focus();\n    }\n  };\n\n  // 조합 이벤트 처리\n  const handleCompositionStart = index => {\n    setComposingLine(index);\n  };\n  const handleCompositionEnd = () => {\n    setComposingLine(null);\n  };\n\n  // 완성 여부 확인\n  const checkCompletion = inputs => {\n    if (inputs.length !== poemLines.length) return false;\n    const allComplete = poemLines.every((line, i) => line === inputs[i]);\n    setCompleted(allComplete);\n    return allComplete;\n  };\n\n  // 줄 렌더링\n  const renderLine = (line, index) => {\n    const input = lineInputs[index] || '';\n    const isActive = index === activeLineIndex;\n    const isComposing = index === composingLine;\n\n    // 각 글자 렌더링\n    const chars = line.split('').map((char, i) => {\n      // 입력된 글자가 있는 경우\n      if (i < input.length) {\n        // 조합 중이고 마지막 글자일 경우\n        if (isComposing && i === input.length - 1) {\n          return /*#__PURE__*/_jsxDEV(Char, {\n            status: \"composing\",\n            children: input[i]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this);\n        }\n\n        // 일치 여부에 따라 스타일 결정\n        const status = char === input[i] ? 'correct' : 'incorrect';\n        return /*#__PURE__*/_jsxDEV(Char, {\n          status: status,\n          children: input[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this);\n      }\n\n      // 입력되지 않은 글자는 기다림 상태\n      return /*#__PURE__*/_jsxDEV(Char, {\n        status: \"waiting\",\n        children: char\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(LineContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BaseLine, {\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLine, {\n        ref: lineRefs.current[index],\n        value: input,\n        onChange: e => handleLineInput(index, e.target.value),\n        onKeyDown: e => handleKeyDown(e, index),\n        onCompositionStart: () => handleCompositionStart(index),\n        onCompositionEnd: handleCompositionEnd,\n        disabled: !isActive,\n        autoFocus: isActive && index === 0,\n        spellCheck: false,\n        autoComplete: \"off\",\n        \"data-line-index\": index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverlayLine, {\n        children: chars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 초기 포커스 설정\n  useEffect(() => {\n    var _lineRefs$current$act;\n    (_lineRefs$current$act = lineRefs.current[activeLineIndex].current) === null || _lineRefs$current$act === void 0 ? void 0 : _lineRefs$current$act.focus();\n  }, [activeLineIndex]);\n  const progress = calculateProgress();\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: /*#__PURE__*/_jsxDEV(TextContainer, {\n        children: poemLines.map((line, i) => renderLine(line, i))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"heGceidzzjrPMjtmu+F/yrJzmCo=\");\n_c13 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"LineContainer\");\n$RefreshReg$(_c6, \"BaseLine\");\n$RefreshReg$(_c7, \"InputLine\");\n$RefreshReg$(_c8, \"OverlayLine\");\n$RefreshReg$(_c9, \"Char\");\n$RefreshReg$(_c10, \"ProgressBar\");\n$RefreshReg$(_c11, \"Progress\");\n$RefreshReg$(_c12, \"CompletionMessage\");\n$RefreshReg$(_c13, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","LineContainer","_c5","BaseLine","_c6","InputLine","input","_c7","OverlayLine","_c8","Char","span","props","status","_c9","ProgressBar","_c10","Progress","width","_c11","CompletionMessage","show","_c12","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","App","_s","currentPoem","poemLines","split","lineInputs","setLineInputs","Array","length","fill","activeLineIndex","setActiveLineIndex","completed","setCompleted","composingLine","setComposingLine","lineRefs","map","calculateProgress","correctChars","totalChars","forEach","line","index","i","Math","min","handleLineInput","value","newLineInputs","currentLine","setTimeout","_lineRefs$current$cur","current","focus","checkCompletion","handleKeyDown","e","key","preventDefault","_lineRefs$current$cur2","_lineRefs$current$cur3","_lineRefs$current$cur4","handleCompositionStart","handleCompositionEnd","inputs","allComplete","every","renderLine","isActive","isComposing","chars","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","target","onKeyDown","onCompositionStart","onCompositionEnd","disabled","autoFocus","spellCheck","autoComplete","_lineRefs$current$act","progress","_c13","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, createRef, RefObject } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: rgb(255, 255, 255);\n  min-height: 100vh;\n  color: #000;\n`;\n\nconst Title = styled.h1`\n  color: black;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst LineContainer = styled.div`\n  position: relative;\n  height: 1.8em;\n  margin-bottom: 0.2em;\n`;\n\nconst BaseLine = styled.div`\n  white-space: pre;\n  color: lightgray;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: monospace;\n`;\n\nconst InputLine = styled.input`\n  width: 100%;\n  font-size: 1.5rem;\n  line-height: 1.8;\n  font-family: monospace;\n  background: transparent;\n  border: none;\n  outline: none;\n  color: transparent;\n  caret-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0;\n`;\n\nconst OverlayLine = styled.div`\n  white-space: pre;\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: monospace;\n  pointer-events: none;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' | 'composing' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return 'black';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return 'transparent';\n      case 'composing': return '#aaffaa'; // 조합 중인 글자는 연한 녹색\n    }\n  }};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n  color: white;\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\nconst App: React.FC = () => {\n  const currentPoem = poems[0];\n  const poemLines = currentPoem.content.split('\\n');\n  \n  // 각 줄별 상태 관리\n  const [lineInputs, setLineInputs] = useState<string[]>(Array(poemLines.length).fill(''));\n  const [activeLineIndex, setActiveLineIndex] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [composingLine, setComposingLine] = useState<number | null>(null);\n  \n  // 각 줄의 입력 필드에 대한 ref 생성\n  const lineRefs = useRef<RefObject<HTMLInputElement>[]>(\n    Array(poemLines.length).fill(null).map(() => createRef<HTMLInputElement>())\n  );\n  \n  // 진행 상황 계산\n  const calculateProgress = () => {\n    let correctChars = 0;\n    let totalChars = 0;\n    \n    poemLines.forEach((line, index) => {\n      const input = lineInputs[index] || '';\n      for (let i = 0; i < Math.min(line.length, input.length); i++) {\n        if (line[i] === input[i]) {\n          correctChars++;\n        }\n      }\n      totalChars += line.length;\n    });\n    \n    return (correctChars / totalChars) * 100;\n  };\n  \n  // 줄 입력 처리\n  const handleLineInput = (index: number, value: string) => {\n    const newLineInputs = [...lineInputs];\n    newLineInputs[index] = value;\n    setLineInputs(newLineInputs);\n    \n    // 현재 줄이 완성되었는지 확인\n    const currentLine = poemLines[index];\n    if (value === currentLine && index < poemLines.length - 1) {\n      // 다음 줄로 자동 이동 (약간의 지연 추가)\n      setTimeout(() => {\n        setActiveLineIndex(index + 1);\n        lineRefs.current[index + 1].current?.focus();\n      }, 100);\n    }\n    \n    // 전체 완성 여부 확인\n    checkCompletion(newLineInputs);\n  };\n  \n  // 키 이벤트 처리\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n    // 엔터키 처리\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      \n      // 마지막 줄이 아니면 다음 줄로 이동\n      if (index < poemLines.length - 1) {\n        setActiveLineIndex(index + 1);\n        lineRefs.current[index + 1].current?.focus();\n      }\n    }\n    // 위 화살표 처리\n    else if (e.key === 'ArrowUp' && index > 0) {\n      e.preventDefault();\n      setActiveLineIndex(index - 1);\n      lineRefs.current[index - 1].current?.focus();\n    }\n    // 아래 화살표 처리\n    else if (e.key === 'ArrowDown' && index < poemLines.length - 1) {\n      e.preventDefault();\n      setActiveLineIndex(index + 1);\n      lineRefs.current[index + 1].current?.focus();\n    }\n  };\n  \n  // 조합 이벤트 처리\n  const handleCompositionStart = (index: number) => {\n    setComposingLine(index);\n  };\n  \n  const handleCompositionEnd = () => {\n    setComposingLine(null);\n  };\n  \n  // 완성 여부 확인\n  const checkCompletion = (inputs: string[]) => {\n    if (inputs.length !== poemLines.length) return false;\n    \n    const allComplete = poemLines.every((line, i) => line === inputs[i]);\n    setCompleted(allComplete);\n    return allComplete;\n  };\n  \n  // 줄 렌더링\n  const renderLine = (line: string, index: number) => {\n    const input = lineInputs[index] || '';\n    const isActive = index === activeLineIndex;\n    const isComposing = index === composingLine;\n    \n    // 각 글자 렌더링\n    const chars = line.split('').map((char, i) => {\n      // 입력된 글자가 있는 경우\n      if (i < input.length) {\n        // 조합 중이고 마지막 글자일 경우\n        if (isComposing && i === input.length - 1) {\n          return (\n            <Char key={i} status=\"composing\">\n              {input[i]}\n            </Char>\n          );\n        }\n        \n        // 일치 여부에 따라 스타일 결정\n        const status = char === input[i] ? 'correct' : 'incorrect';\n        return (\n          <Char key={i} status={status}>\n            {input[i]}\n          </Char>\n        );\n      }\n      \n      // 입력되지 않은 글자는 기다림 상태\n      return (\n        <Char key={i} status=\"waiting\">\n          {char}\n        </Char>\n      );\n    });\n    \n    return (\n      <LineContainer key={index}>\n        <BaseLine>{line}</BaseLine>\n        <InputLine\n          ref={lineRefs.current[index]}\n          value={input}\n          onChange={(e) => handleLineInput(index, e.target.value)}\n          onKeyDown={(e) => handleKeyDown(e, index)}\n          onCompositionStart={() => handleCompositionStart(index)}\n          onCompositionEnd={handleCompositionEnd}\n          disabled={!isActive}\n          autoFocus={isActive && index === 0}\n          spellCheck={false}\n          autoComplete=\"off\"\n          data-line-index={index}\n        />\n        <OverlayLine>{chars}</OverlayLine>\n      </LineContainer>\n    );\n  };\n  \n  // 초기 포커스 설정\n  useEffect(() => {\n    lineRefs.current[activeLineIndex].current?.focus();\n  }, [activeLineIndex]);\n  \n  const progress = calculateProgress();\n  \n  return (\n    <AppContainer>\n      <Title>시 타이핑 연습</Title>\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          {poemLines.map((line, i) => renderLine(line, i))}\n        </TextContainer>\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}