{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n_c5 = BaseText;\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n_c6 = OverlayText;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return '#fff';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return '#666';\n    case 'composing':\n      return '#aaffaa';\n    // 조합 중인 글자는 연한 녹색으로\n  }\n}};\n`;\n_c7 = Char;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c8 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c9 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n_c10 = CompletionMessage;\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: auto;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  cursor: text;\n`;\n_c11 = HiddenInput;\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  animation: blink 1s step-end infinite;\n  vertical-align: middle;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n_c12 = Cursor;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = char => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n  const jong = code % 28;\n  const jung = (code - jong) / 28 % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\nconst App = () => {\n  _s();\n  // 상태 관리 단순화\n  const [input, setInput] = useState('');\n  const [composing, setComposing] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [completed, setCompleted] = useState(false);\n\n  // 디버그 정보를 위한 타입 정의\n\n  // 디버그 정보\n  const [debug, setDebug] = useState({\n    showDebug: true\n  });\n  const inputRef = useRef(null);\n  const currentPoem = poems[0];\n\n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n\n  // 진행 상황 계산\n  const calculateProgress = () => {\n    if (input.length === 0) return 0;\n    const correctChars = input.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return correctChars / currentPoem.content.length * 100;\n  };\n\n  // 입력 처리 단순화\n  const handleInput = e => {\n    const inputValue = e.target.value;\n    setInput(inputValue);\n    setCursorPosition(e.target.selectionStart || 0);\n\n    // 디버그 정보 업데이트\n    setDebug({\n      showDebug: debug.showDebug,\n      currentInput: inputValue,\n      cursorPosition: e.target.selectionStart || 0,\n      isComposing: composing\n    });\n\n    // 완료 여부 확인\n    const isComplete = checkLineCompletion(inputValue);\n    if (isComplete) {\n      setCompleted(true);\n    }\n  };\n\n  // 완료 여부 확인\n  const checkLineCompletion = value => {\n    if (value.length > 0) {\n      let allLinesMatch = true;\n      const inputLines = value.split('\\n');\n      for (let i = 0; i < poemLines.length; i++) {\n        if (i >= inputLines.length || inputLines[i] !== poemLines[i]) {\n          allLinesMatch = false;\n          break;\n        }\n      }\n      return allLinesMatch && inputLines.length >= poemLines.length;\n    }\n    return false;\n  };\n\n  // 조합 이벤트 처리 단순화\n  const handleCompositionStart = () => {\n    setComposing(true);\n    setDebug({\n      ...debug,\n      event: 'composition start',\n      isComposing: true\n    });\n  };\n  const handleCompositionUpdate = e => {\n    setDebug({\n      ...debug,\n      event: 'composition update',\n      data: e.data || ''\n    });\n  };\n  const handleCompositionEnd = () => {\n    setComposing(false);\n    setDebug({\n      ...debug,\n      event: 'composition end',\n      isComposing: false\n    });\n  };\n\n  // 줄 단위 렌더링 간소화\n  const renderOverlayLine = (targetLine, lineIndex) => {\n    // 현재 텍스트를 줄 단위로 분리\n    const textLines = input.split('\\n');\n    // 현재 줄에 해당하는 텍스트\n    const inputContent = lineIndex < textLines.length ? textLines[lineIndex] : '';\n\n    // 현재 줄의 시작 위치 계산\n    let lineStartPos = 0;\n    for (let i = 0; i < lineIndex; i++) {\n      lineStartPos += (i < textLines.length ? textLines[i].length : 0) + 1; // +1 for newline\n    }\n\n    // 초기 상태 또는 빈 입력일 때 처리 (첫 줄의 첫 글자 앞에 커서)\n    const isInitialState = input === '' && lineIndex === 0;\n\n    // 커서가 현재 줄에 있는지 확인\n    const isCursorInThisLine = isInitialState || cursorPosition >= lineStartPos && (lineIndex === textLines.length - 1 || cursorPosition < lineStartPos + inputContent.length + 1);\n\n    // 줄 내 커서 위치 (상대적 위치)\n    const cursorPositionInLine = isInitialState ? 0 : isCursorInThisLine ? cursorPosition - lineStartPos : -1;\n\n    // 결과 렌더링\n    const result = [];\n    let hasCursor = false;\n\n    // 초기 상태에서 첫 글자 앞에 커서 배치\n    if (isInitialState) {\n      result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, \"initial-cursor\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this));\n      hasCursor = true;\n    }\n\n    // 목표 텍스트 처리\n    for (let i = 0; i < targetLine.length; i++) {\n      const targetChar = targetLine[i];\n      const isCursorHere = !isInitialState && isCursorInThisLine && cursorPositionInLine === i && !hasCursor;\n      if (i < inputContent.length) {\n        // 입력된 글자 처리\n        const inputChar = inputContent[i];\n        const status = targetChar === inputChar ? 'correct' : 'incorrect';\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: composing && i === inputContent.length - 1 ? 'composing' : status,\n            children: inputChar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), isCursorHere && (hasCursor = true) && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 52\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this));\n      } else {\n        // 입력되지 않은 글자 처리\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: \"waiting\",\n            children: targetChar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), isCursorHere && (hasCursor = true) && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 52\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    // 초과 입력 처리\n    if (inputContent.length > targetLine.length) {\n      for (let i = targetLine.length; i < inputContent.length; i++) {\n        const isCursorHere = isCursorInThisLine && cursorPositionInLine === i && !hasCursor;\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: composing && i === inputContent.length - 1 ? 'composing' : 'incorrect',\n            children: inputContent[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), isCursorHere && (hasCursor = true) && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 52\n          }, this)]\n        }, `excess-${i}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    // 끝에 커서 표시 (초기 상태가 아닐 때)\n    if (!isInitialState && isCursorInThisLine && cursorPositionInLine === inputContent.length && !hasCursor) {\n      result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, \"end-cursor\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this));\n    }\n    return result;\n  };\n  const progress = calculateProgress();\n\n  // 초기화 시 포커스\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      setCursorPosition(0);\n    }\n  }, []);\n\n  // 렌더링\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onClick: () => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), (process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB514\\uBC84\\uADF8 \\uC815\\uBCF4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(debug, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: /*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BaseText, {\n          children: currentPoem.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverlayText, {\n          children: poemLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: renderOverlayLine(line, i)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n          ref: inputRef,\n          value: input,\n          onChange: handleInput,\n          onCompositionStart: handleCompositionStart,\n          onCompositionUpdate: handleCompositionUpdate,\n          onCompositionEnd: handleCompositionEnd,\n          autoFocus: true,\n          autoComplete: \"off\",\n          autoCorrect: \"off\",\n          spellCheck: false,\n          \"aria-label\": \"\\uC2DC \\uC785\\uB825 \\uD544\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cz0v8KuzBQAPMl14pObBO5rxINs=\");\n_c13 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"BaseText\");\n$RefreshReg$(_c6, \"OverlayText\");\n$RefreshReg$(_c7, \"Char\");\n$RefreshReg$(_c8, \"ProgressBar\");\n$RefreshReg$(_c9, \"Progress\");\n$RefreshReg$(_c10, \"CompletionMessage\");\n$RefreshReg$(_c11, \"HiddenInput\");\n$RefreshReg$(_c12, \"Cursor\");\n$RefreshReg$(_c13, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","BaseText","_c5","OverlayText","_c6","Char","span","props","status","_c7","ProgressBar","_c8","Progress","width","_c9","CompletionMessage","show","_c10","HiddenInput","input","_c11","Cursor","_c12","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","CHOSEONG","decompose","jong","jung","cho","Math","floor","App","_s","setInput","composing","setComposing","cursorPosition","setCursorPosition","completed","setCompleted","debug","setDebug","showDebug","inputRef","currentPoem","poemLines","split","calculateProgress","length","correctChars","filter","i","handleInput","e","inputValue","target","value","selectionStart","currentInput","isComposing","isComplete","checkLineCompletion","allLinesMatch","inputLines","handleCompositionStart","event","handleCompositionUpdate","data","handleCompositionEnd","renderOverlayLine","targetLine","lineIndex","textLines","inputContent","lineStartPos","isInitialState","isCursorInThisLine","cursorPositionInLine","result","hasCursor","push","style","position","children","fileName","_jsxFileName","lineNumber","columnNumber","targetChar","isCursorHere","inputChar","progress","current","focus","onClick","_inputRef$current","process","env","NODE_ENV","window","location","hostname","className","JSON","stringify","map","line","whiteSpace","ref","onChange","onCompositionStart","onCompositionUpdate","onCompositionEnd","autoFocus","autoComplete","autoCorrect","spellCheck","_c13","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' | 'composing' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return '#fff';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return '#666';\n      case 'composing': return '#aaffaa'; // 조합 중인 글자는 연한 녹색으로\n    }\n  }};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: auto;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  cursor: text;\n`;\n\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  animation: blink 1s step-end infinite;\n  vertical-align: middle;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = (char: string) => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n\n  const jong = code % 28;\n  const jung = ((code - jong) / 28) % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\nconst App: React.FC = () => {\n  // 상태 관리 단순화\n  const [input, setInput] = useState('');\n  const [composing, setComposing] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  \n  // 디버그 정보를 위한 타입 정의\n  interface DebugInfo {\n    showDebug: boolean;\n    event?: string;\n    data?: string;\n    currentInput?: string;\n    cursorPosition?: number;\n    isComposing?: boolean;\n  }\n  \n  // 디버그 정보\n  const [debug, setDebug] = useState<DebugInfo>({ \n    showDebug: true \n  });\n  \n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentPoem = poems[0];\n  \n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n  \n  // 진행 상황 계산\n  const calculateProgress = () => {\n    if (input.length === 0) return 0;\n    const correctChars = input.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return (correctChars / currentPoem.content.length) * 100;\n  };\n\n  // 입력 처리 단순화\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n    setInput(inputValue);\n    setCursorPosition(e.target.selectionStart || 0);\n    \n    // 디버그 정보 업데이트\n    setDebug({\n      showDebug: debug.showDebug,\n      currentInput: inputValue,\n      cursorPosition: e.target.selectionStart || 0,\n      isComposing: composing\n    });\n    \n    // 완료 여부 확인\n    const isComplete = checkLineCompletion(inputValue);\n    if (isComplete) {\n      setCompleted(true);\n    }\n  };\n\n  // 완료 여부 확인\n  const checkLineCompletion = (value: string): boolean => {\n    if (value.length > 0) {\n      let allLinesMatch = true;\n      const inputLines = value.split('\\n');\n      \n      for (let i = 0; i < poemLines.length; i++) {\n        if (i >= inputLines.length || inputLines[i] !== poemLines[i]) {\n          allLinesMatch = false;\n          break;\n        }\n      }\n      \n      return allLinesMatch && inputLines.length >= poemLines.length;\n    }\n    return false;\n  };\n\n  // 조합 이벤트 처리 단순화\n  const handleCompositionStart = () => {\n    setComposing(true);\n    setDebug({\n      ...debug,\n      event: 'composition start',\n      isComposing: true\n    });\n  };\n\n  const handleCompositionUpdate = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setDebug({\n      ...debug,\n      event: 'composition update',\n      data: e.data || ''\n    });\n  };\n\n  const handleCompositionEnd = () => {\n    setComposing(false);\n    setDebug({\n      ...debug,\n      event: 'composition end',\n      isComposing: false\n    });\n  };\n\n  // 줄 단위 렌더링 간소화\n  const renderOverlayLine = (targetLine: string, lineIndex: number) => {\n    // 현재 텍스트를 줄 단위로 분리\n    const textLines = input.split('\\n');\n    // 현재 줄에 해당하는 텍스트\n    const inputContent = lineIndex < textLines.length ? textLines[lineIndex] : '';\n    \n    // 현재 줄의 시작 위치 계산\n    let lineStartPos = 0;\n    for (let i = 0; i < lineIndex; i++) {\n      lineStartPos += (i < textLines.length ? textLines[i].length : 0) + 1; // +1 for newline\n    }\n\n    // 초기 상태 또는 빈 입력일 때 처리 (첫 줄의 첫 글자 앞에 커서)\n    const isInitialState = input === '' && lineIndex === 0;\n    \n    // 커서가 현재 줄에 있는지 확인\n    const isCursorInThisLine = isInitialState || (cursorPosition >= lineStartPos && \n      (lineIndex === textLines.length - 1 || cursorPosition < lineStartPos + inputContent.length + 1));\n    \n    // 줄 내 커서 위치 (상대적 위치)\n    const cursorPositionInLine = isInitialState ? 0 : (isCursorInThisLine ? (cursorPosition - lineStartPos) : -1);\n    \n    // 결과 렌더링\n    const result: JSX.Element[] = [];\n    let hasCursor = false;\n\n    // 초기 상태에서 첫 글자 앞에 커서 배치\n    if (isInitialState) {\n      result.push(\n        <span key=\"initial-cursor\" style={{ position: 'relative' }}>\n          <Cursor />\n        </span>\n      );\n      hasCursor = true;\n    }\n\n    // 목표 텍스트 처리\n    for (let i = 0; i < targetLine.length; i++) {\n      const targetChar = targetLine[i];\n      const isCursorHere = !isInitialState && isCursorInThisLine && cursorPositionInLine === i && !hasCursor;\n      \n      if (i < inputContent.length) {\n        // 입력된 글자 처리\n        const inputChar = inputContent[i];\n        const status = targetChar === inputChar ? 'correct' : 'incorrect';\n        \n        result.push(\n          <span key={i} style={{ position: 'relative' }}>\n            <Char status={composing && i === inputContent.length - 1 ? 'composing' : status}>\n              {inputChar}\n            </Char>\n            {isCursorHere && (hasCursor = true) && <Cursor />}\n          </span>\n        );\n      } else {\n        // 입력되지 않은 글자 처리\n        result.push(\n          <span key={i} style={{ position: 'relative' }}>\n            <Char status=\"waiting\">{targetChar}</Char>\n            {isCursorHere && (hasCursor = true) && <Cursor />}\n          </span>\n        );\n      }\n    }\n\n    // 초과 입력 처리\n    if (inputContent.length > targetLine.length) {\n      for (let i = targetLine.length; i < inputContent.length; i++) {\n        const isCursorHere = isCursorInThisLine && cursorPositionInLine === i && !hasCursor;\n        \n        result.push(\n          <span key={`excess-${i}`} style={{ position: 'relative' }}>\n            <Char status={composing && i === inputContent.length - 1 ? 'composing' : 'incorrect'}>\n              {inputContent[i]}\n            </Char>\n            {isCursorHere && (hasCursor = true) && <Cursor />}\n          </span>\n        );\n      }\n    }\n\n    // 끝에 커서 표시 (초기 상태가 아닐 때)\n    if (!isInitialState && isCursorInThisLine && cursorPositionInLine === inputContent.length && !hasCursor) {\n      result.push(\n        <span key=\"end-cursor\" style={{ position: 'relative' }}>\n          <Cursor />\n        </span>\n      );\n    }\n\n    return result;\n  };\n\n  const progress = calculateProgress();\n\n  // 초기화 시 포커스\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      setCursorPosition(0);\n    }\n  }, []);\n\n  // 렌더링\n  return (\n    <AppContainer onClick={() => inputRef.current?.focus()}>\n      <Title>시 타이핑 연습</Title>\n      {/* 디버그 정보 표시 (개발 모드에서만) */}\n      {(process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost') && (\n        <div className=\"debug\">\n          <h3>디버그 정보:</h3>\n          <pre>{JSON.stringify(debug, null, 2)}</pre>\n        </div>\n      )}\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          {/* 시 내용 표시 */}\n          <BaseText>{currentPoem.content}</BaseText>\n          \n          {/* 입력 내용 오버레이 */}\n          <OverlayText>\n            {poemLines.map((line, i) => (\n              <div key={i} style={{ whiteSpace: 'pre-wrap' }}>\n                {renderOverlayLine(line, i)}\n              </div>\n            ))}\n          </OverlayText>\n          \n          <HiddenInput\n            ref={inputRef}\n            value={input}\n            onChange={handleInput}\n            onCompositionStart={handleCompositionStart}\n            onCompositionUpdate={handleCompositionUpdate}\n            onCompositionEnd={handleCompositionEnd}\n            autoFocus\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            spellCheck={false}\n            aria-label=\"시 입력 필드\"\n          />\n        </TextContainer>\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}