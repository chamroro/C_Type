{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n`;\n_c5 = BaseText;\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n`;\n_c6 = OverlayText;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return '#fff';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return 'transparent';\n  }\n}};\n`;\n_c7 = Char;\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c8 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c9 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n_c10 = CompletionMessage;\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n_c11 = HiddenInput;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n\n \n\n잘 있거라, 짧았던 밤들아\n\n창밖을 떠돌던 겨울 안개들아\n\n아무것도 모르던 촛불들아, 잘 있거라\n\n공포를 기다리던 흰 종이들아\n\n말설임을 대신하던 눈물들아\n\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n\n \n\n장님처럼 나 이제 더듬거리며 문을 잠그네\n\n가엾은 내 사랑 빈집에 갇혔네\n\n \n\n- 기형도, 빈 집`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = char => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n  const jong = code % 28;\n  const jung = (code - jong) / 28 % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [compositionBuffer, setCompositionBuffer] = useState({\n    cho: '',\n    jung: '',\n    jong: '',\n    display: ''\n  });\n  const [compositionStart, setCompositionStart] = useState(-1);\n  const inputRef = useRef(null);\n  const currentPoem = poems[0];\n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return correctChars / currentPoem.content.length * 100;\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const handleInput = e => {\n    const newValue = e.currentTarget.value;\n    if (!composing) {\n      setUserInput(newValue);\n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n  const handleCompositionStart = e => {\n    setComposing(true);\n    const data = e.data || '';\n    if (isChoseong(data)) {\n      setCompositionBuffer({\n        cho: data,\n        jung: '',\n        jong: '',\n        display: data\n      });\n    }\n    setCompositionStart(userInput.length);\n  };\n  const handleCompositionUpdate = e => {\n    const data = e.data || '';\n    if (compositionBuffer.cho && isJungseong(data[data.length - 1])) {\n      // 초성 + 중성 입력 중\n      setCompositionBuffer(prev => ({\n        ...prev,\n        jung: data[data.length - 1],\n        display: data // 완성된 글자(예: '사')를 표시\n      }));\n    } else if (isChoseong(data)) {\n      // 새로운 초성 입력\n      setCompositionBuffer({\n        cho: data,\n        jung: '',\n        jong: '',\n        display: data\n      });\n    } else {\n      // 그 외의 경우 현재 입력된 데이터를 표시\n      setCompositionBuffer(prev => ({\n        ...prev,\n        display: data\n      }));\n    }\n  };\n  const handleCompositionEnd = e => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCompositionBuffer({\n      cho: '',\n      jung: '',\n      jong: '',\n      display: ''\n    });\n    setCompositionStart(-1);\n    setUserInput(finalValue);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n    }\n  };\n  const renderOverlayText = () => {\n    const userChars = userInput.split('');\n    const targetChars = currentPoem.content.split('');\n    return targetChars.map((char, i) => {\n      let status = 'waiting';\n      let displayChar = char;\n\n      // 이미 입력이 완료된 글자들\n      if (i < userInput.length && (!composing || i < compositionStart)) {\n        status = userChars[i] === char ? 'correct' : 'incorrect';\n        displayChar = userChars[i];\n      }\n\n      // 현재 조합 중인 글자\n      if (composing && i === compositionStart) {\n        displayChar = compositionBuffer.display;\n        if (isChoseong(compositionBuffer.display)) {\n          // 초성만 있는 경우\n          const targetDecomp = decompose(char);\n          if (targetDecomp) {\n            status = CHOSEONG[targetDecomp.cho] === compositionBuffer.display ? 'correct' : 'incorrect';\n          } else {\n            status = 'incorrect';\n          }\n        } else {\n          // 조합된 글자이거나 중성이 입력된 경우\n          status = char === displayChar ? 'correct' : 'incorrect';\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Char, {\n          status: status,\n          children: displayChar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const progress = calculateProgress();\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onClick: () => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BaseText, {\n          children: currentPoem.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverlayText, {\n          children: renderOverlayText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n        ref: inputRef,\n        value: userInput,\n        onChange: handleInput,\n        onCompositionStart: handleCompositionStart,\n        onCompositionUpdate: handleCompositionUpdate,\n        onCompositionEnd: handleCompositionEnd,\n        onKeyDown: handleKeyDown,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n3cq52vrODLO2jNlFy6PJRN4ack=\");\n_c12 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"BaseText\");\n$RefreshReg$(_c6, \"OverlayText\");\n$RefreshReg$(_c7, \"Char\");\n$RefreshReg$(_c8, \"ProgressBar\");\n$RefreshReg$(_c9, \"Progress\");\n$RefreshReg$(_c10, \"CompletionMessage\");\n$RefreshReg$(_c11, \"HiddenInput\");\n$RefreshReg$(_c12, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","BaseText","_c5","OverlayText","_c6","Char","span","props","status","_c7","ComposingChar","ProgressBar","_c8","Progress","width","_c9","CompletionMessage","show","_c10","HiddenInput","input","_c11","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","CHOSEONG","decompose","jong","jung","cho","Math","floor","App","_s","userInput","setUserInput","completed","setCompleted","composing","setComposing","compositionBuffer","setCompositionBuffer","display","compositionStart","setCompositionStart","inputRef","currentPoem","calculateProgress","length","correctChars","split","filter","i","current","focus","handleInput","e","newValue","currentTarget","value","isCorrect","handleCompositionStart","data","handleCompositionUpdate","prev","handleCompositionEnd","finalValue","handleKeyDown","key","preventDefault","slice","renderOverlayText","userChars","targetChars","map","displayChar","targetDecomp","style","position","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onClick","_inputRef$current","ref","onChange","onCompositionStart","onCompositionUpdate","onCompositionEnd","onKeyDown","autoFocus","_c12","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n`;\n\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return '#fff';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return 'transparent';\n    }\n  }};\n`;\n\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n\n \n\n잘 있거라, 짧았던 밤들아\n\n창밖을 떠돌던 겨울 안개들아\n\n아무것도 모르던 촛불들아, 잘 있거라\n\n공포를 기다리던 흰 종이들아\n\n말설임을 대신하던 눈물들아\n\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n\n \n\n장님처럼 나 이제 더듬거리며 문을 잠그네\n\n가엾은 내 사랑 빈집에 갇혔네\n\n \n\n- 기형도, 빈 집`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = (char: string) => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n\n  const jong = code % 28;\n  const jung = ((code - jong) / 28) % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\nconst App: React.FC = () => {\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [compositionBuffer, setCompositionBuffer] = useState<{\n    cho: string;\n    jung: string;\n    jong: string;\n    display: string;\n  }>({ cho: '', jung: '', jong: '', display: '' });\n  const [compositionStart, setCompositionStart] = useState(-1);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentPoem = poems[0];\n  \n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return (correctChars / currentPoem.content.length) * 100;\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    if (!composing) {\n      setUserInput(newValue);\n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n\n  const handleCompositionStart = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setComposing(true);\n    const data = e.data || '';\n    \n    if (isChoseong(data)) {\n      setCompositionBuffer({\n        cho: data,\n        jung: '',\n        jong: '',\n        display: data\n      });\n    }\n    setCompositionStart(userInput.length);\n  };\n\n  const handleCompositionUpdate = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const data = e.data || '';\n    \n    if (compositionBuffer.cho && isJungseong(data[data.length - 1])) {\n      // 초성 + 중성 입력 중\n      setCompositionBuffer(prev => ({\n        ...prev,\n        jung: data[data.length - 1],\n        display: data // 완성된 글자(예: '사')를 표시\n      }));\n    } else if (isChoseong(data)) {\n      // 새로운 초성 입력\n      setCompositionBuffer({\n        cho: data,\n        jung: '',\n        jong: '',\n        display: data\n      });\n    } else {\n      // 그 외의 경우 현재 입력된 데이터를 표시\n      setCompositionBuffer(prev => ({\n        ...prev,\n        display: data\n      }));\n    }\n  };\n\n  const handleCompositionEnd = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCompositionBuffer({ cho: '', jung: '', jong: '', display: '' });\n    setCompositionStart(-1);\n    setUserInput(finalValue);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n    }\n  };\n\n  const renderOverlayText = () => {\n    const userChars = userInput.split('');\n    const targetChars = currentPoem.content.split('');\n    \n    return targetChars.map((char, i) => {\n      let status: 'correct' | 'incorrect' | 'waiting' = 'waiting';\n      let displayChar = char;\n\n      // 이미 입력이 완료된 글자들\n      if (i < userInput.length && (!composing || i < compositionStart)) {\n        status = userChars[i] === char ? 'correct' : 'incorrect';\n        displayChar = userChars[i];\n      }\n\n      // 현재 조합 중인 글자\n      if (composing && i === compositionStart) {\n        displayChar = compositionBuffer.display;\n        \n        if (isChoseong(compositionBuffer.display)) {\n          // 초성만 있는 경우\n          const targetDecomp = decompose(char);\n          if (targetDecomp) {\n            status = CHOSEONG[targetDecomp.cho] === compositionBuffer.display ? 'correct' : 'incorrect';\n          } else {\n            status = 'incorrect';\n          }\n        } else {\n          // 조합된 글자이거나 중성이 입력된 경우\n          status = char === displayChar ? 'correct' : 'incorrect';\n        }\n      }\n      \n      return (\n        <span key={i} style={{ position: 'relative' }}>\n          <Char status={status}>\n            {displayChar}\n          </Char>\n        </span>\n      );\n    });\n  };\n\n  const progress = calculateProgress();\n\n  return (\n    <AppContainer onClick={() => inputRef.current?.focus()}>\n      <Title>시 타이핑 연습</Title>\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          <BaseText>{currentPoem.content}</BaseText>\n          <OverlayText>{renderOverlayText()}</OverlayText>\n        </TextContainer>\n        <HiddenInput\n          ref={inputRef}\n          value={userInput}\n          onChange={handleInput}\n          onCompositionStart={handleCompositionStart}\n          onCompositionUpdate={handleCompositionUpdate}\n          onCompositionEnd={handleCompositionEnd}\n          onKeyDown={handleKeyDown}\n          autoFocus\n        />\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}