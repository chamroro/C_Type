{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n`;\n_c5 = BaseText;\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n`;\n_c6 = OverlayText;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return '#fff';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return 'transparent';\n  }\n}};\n`;\n_c7 = Char;\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c8 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c9 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n_c10 = CompletionMessage;\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n_c11 = HiddenInput;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n\n \n\n잘 있거라, 짧았던 밤들아\n\n창밖을 떠돌던 겨울 안개들아\n\n아무것도 모르던 촛불들아, 잘 있거라\n\n공포를 기다리던 흰 종이들아\n\n말설임을 대신하던 눈물들아\n\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n\n \n\n장님처럼 나 이제 더듬거리며 문을 잠그네\n\n가엾은 내 사랑 빈집에 갇혔네\n\n \n\n- 기형도, 빈 집`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 한글 자모 분리\nconst decompose = char => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n  const jong = code % 28;\n  const jung = (code - jong) / 28 % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 초성 매칭 검사\nconst isChoMatch = (target, input) => {\n  if (!isKorean(target)) return false;\n  if (!isChoseong(input)) return false;\n  const targetDecomp = decompose(target);\n  if (!targetDecomp) return false;\n\n  // 초성 테이블 (ㄱ, ㄲ, ㄴ, ㄷ, ...)\n  const choTable = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n  return choTable[targetDecomp.cho] === input;\n};\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [compositionChar, setCompositionChar] = useState('');\n  const [compositionStart, setCompositionStart] = useState(-1);\n  const [previousComposition, setPreviousComposition] = useState('');\n  const inputRef = useRef(null);\n  const currentPoem = poems[0];\n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return correctChars / currentPoem.content.length * 100;\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const handleInput = e => {\n    const newValue = e.currentTarget.value;\n    if (!composing) {\n      setUserInput(newValue);\n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n  const handleCompositionStart = e => {\n    setComposing(true);\n    const newChar = e.data || '';\n    setCompositionChar(newChar);\n    setPreviousComposition(newChar);\n    setCompositionStart(userInput.length);\n  };\n  const handleCompositionUpdate = e => {\n    const newChar = e.data || '';\n    setPreviousComposition(compositionChar);\n    setCompositionChar(newChar);\n  };\n  const handleCompositionEnd = e => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCompositionChar('');\n    setPreviousComposition('');\n    setCompositionStart(-1);\n    setUserInput(finalValue);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n    }\n  };\n  const renderOverlayText = () => {\n    const userChars = userInput.split('');\n    const targetChars = currentPoem.content.split('');\n    return targetChars.map((char, i) => {\n      let status = 'waiting';\n      let displayChar = char;\n\n      // 이미 입력이 완료된 글자들\n      if (i < userInput.length && (!composing || i < compositionStart)) {\n        status = userChars[i] === char ? 'correct' : 'incorrect';\n        displayChar = userChars[i];\n      }\n\n      // 현재 조합 중인 글자\n      if (composing && i === compositionStart) {\n        // 초성만 입력된 경우 (ㅅ)\n        if (isChoseong(compositionChar)) {\n          status = isChoMatch(char, compositionChar) ? 'correct' : 'incorrect';\n          displayChar = compositionChar;\n        }\n        // 중성이 입력되는 경우 (ㅅ + ㅏ = 사)\n        else if (isJungseong(compositionChar) && previousComposition && isChoseong(previousComposition)) {\n          displayChar = previousComposition;\n          status = isChoMatch(char, previousComposition) ? 'correct' : 'incorrect';\n        }\n        // 완성된 글자인 경우\n        else if (compositionChar) {\n          status = char === compositionChar ? 'correct' : 'incorrect';\n          displayChar = compositionChar;\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Char, {\n          status: status,\n          children: displayChar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const progress = calculateProgress();\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onClick: () => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BaseText, {\n          children: currentPoem.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverlayText, {\n          children: renderOverlayText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n        ref: inputRef,\n        value: userInput,\n        onChange: handleInput,\n        onCompositionStart: handleCompositionStart,\n        onCompositionUpdate: handleCompositionUpdate,\n        onCompositionEnd: handleCompositionEnd,\n        onKeyDown: handleKeyDown,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"D9U4FRSm58afMsS7R6RY8Zem9qk=\");\n_c12 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"BaseText\");\n$RefreshReg$(_c6, \"OverlayText\");\n$RefreshReg$(_c7, \"Char\");\n$RefreshReg$(_c8, \"ProgressBar\");\n$RefreshReg$(_c9, \"Progress\");\n$RefreshReg$(_c10, \"CompletionMessage\");\n$RefreshReg$(_c11, \"HiddenInput\");\n$RefreshReg$(_c12, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","BaseText","_c5","OverlayText","_c6","Char","span","props","status","_c7","ComposingChar","ProgressBar","_c8","Progress","width","_c9","CompletionMessage","show","_c10","HiddenInput","input","_c11","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","isJungseong","decompose","jong","jung","cho","Math","floor","isChoMatch","target","targetDecomp","choTable","App","_s","userInput","setUserInput","completed","setCompleted","composing","setComposing","compositionChar","setCompositionChar","compositionStart","setCompositionStart","previousComposition","setPreviousComposition","inputRef","currentPoem","calculateProgress","length","correctChars","split","filter","i","current","focus","handleInput","e","newValue","currentTarget","value","isCorrect","handleCompositionStart","newChar","data","handleCompositionUpdate","handleCompositionEnd","finalValue","handleKeyDown","key","preventDefault","prev","slice","renderOverlayText","userChars","targetChars","map","displayChar","style","position","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onClick","_inputRef$current","ref","onChange","onCompositionStart","onCompositionUpdate","onCompositionEnd","onKeyDown","autoFocus","_c12","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n`;\n\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return '#fff';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return 'transparent';\n    }\n  }};\n`;\n\nconst ComposingChar = styled.span`\n  position: absolute;\n  color: #fff;\n  background: transparent;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: none;\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n\n \n\n잘 있거라, 짧았던 밤들아\n\n창밖을 떠돌던 겨울 안개들아\n\n아무것도 모르던 촛불들아, 잘 있거라\n\n공포를 기다리던 흰 종이들아\n\n말설임을 대신하던 눈물들아\n\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n\n \n\n장님처럼 나 이제 더듬거리며 문을 잠그네\n\n가엾은 내 사랑 빈집에 갇혔네\n\n \n\n- 기형도, 빈 집`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 중성 검사\nconst isJungseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x314F && code <= 0x3163;\n};\n\n// 한글 자모 분리\nconst decompose = (char: string) => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n\n  const jong = code % 28;\n  const jung = ((code - jong) / 28) % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 초성 매칭 검사\nconst isChoMatch = (target: string, input: string) => {\n  if (!isKorean(target)) return false;\n  if (!isChoseong(input)) return false;\n\n  const targetDecomp = decompose(target);\n  if (!targetDecomp) return false;\n\n  // 초성 테이블 (ㄱ, ㄲ, ㄴ, ㄷ, ...)\n  const choTable = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n  return choTable[targetDecomp.cho] === input;\n};\n\nconst App: React.FC = () => {\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [compositionChar, setCompositionChar] = useState('');\n  const [compositionStart, setCompositionStart] = useState(-1);\n  const [previousComposition, setPreviousComposition] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentPoem = poems[0];\n  \n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return (correctChars / currentPoem.content.length) * 100;\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    if (!composing) {\n      setUserInput(newValue);\n      if (newValue.length === currentPoem.content.length) {\n        const isCorrect = newValue === currentPoem.content;\n        if (isCorrect) {\n          setCompleted(true);\n        }\n      }\n    }\n  };\n\n  const handleCompositionStart = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setComposing(true);\n    const newChar = e.data || '';\n    setCompositionChar(newChar);\n    setPreviousComposition(newChar);\n    setCompositionStart(userInput.length);\n  };\n\n  const handleCompositionUpdate = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const newChar = e.data || '';\n    setPreviousComposition(compositionChar);\n    setCompositionChar(newChar);\n  };\n\n  const handleCompositionEnd = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCompositionChar('');\n    setPreviousComposition('');\n    setCompositionStart(-1);\n    setUserInput(finalValue);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Backspace' && !composing) {\n      e.preventDefault();\n      setUserInput(prev => prev.slice(0, -1));\n    }\n  };\n\n  const renderOverlayText = () => {\n    const userChars = userInput.split('');\n    const targetChars = currentPoem.content.split('');\n    \n    return targetChars.map((char, i) => {\n      let status: 'correct' | 'incorrect' | 'waiting' = 'waiting';\n      let displayChar = char;\n\n      // 이미 입력이 완료된 글자들\n      if (i < userInput.length && (!composing || i < compositionStart)) {\n        status = userChars[i] === char ? 'correct' : 'incorrect';\n        displayChar = userChars[i];\n      }\n\n      // 현재 조합 중인 글자\n      if (composing && i === compositionStart) {\n        // 초성만 입력된 경우 (ㅅ)\n        if (isChoseong(compositionChar)) {\n          status = isChoMatch(char, compositionChar) ? 'correct' : 'incorrect';\n          displayChar = compositionChar;\n        }\n        // 중성이 입력되는 경우 (ㅅ + ㅏ = 사)\n        else if (isJungseong(compositionChar) && previousComposition && isChoseong(previousComposition)) {\n          displayChar = previousComposition;\n          status = isChoMatch(char, previousComposition) ? 'correct' : 'incorrect';\n        }\n        // 완성된 글자인 경우\n        else if (compositionChar) {\n          status = char === compositionChar ? 'correct' : 'incorrect';\n          displayChar = compositionChar;\n        }\n      }\n      \n      return (\n        <span key={i} style={{ position: 'relative' }}>\n          <Char status={status}>\n            {displayChar}\n          </Char>\n        </span>\n      );\n    });\n  };\n\n  const progress = calculateProgress();\n\n  return (\n    <AppContainer onClick={() => inputRef.current?.focus()}>\n      <Title>시 타이핑 연습</Title>\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          <BaseText>{currentPoem.content}</BaseText>\n          <OverlayText>{renderOverlayText()}</OverlayText>\n        </TextContainer>\n        <HiddenInput\n          ref={inputRef}\n          value={userInput}\n          onChange={handleInput}\n          onCompositionStart={handleCompositionStart}\n          onCompositionUpdate={handleCompositionUpdate}\n          onCompositionEnd={handleCompositionEnd}\n          onKeyDown={handleKeyDown}\n          autoFocus\n        />\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}