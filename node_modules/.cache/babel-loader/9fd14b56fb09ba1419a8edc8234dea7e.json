{"ast":null,"code":"var _jsxFileName = \"/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n_c2 = Title;\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n_c3 = TypingArea;\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n_c4 = TextContainer;\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n_c5 = BaseText;\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\nconst Char = styled.span`\n  color: ${props => {\n  switch (props.status) {\n    case 'correct':\n      return '#fff';\n    case 'incorrect':\n      return '#ff4444';\n    case 'waiting':\n      return '#666';\n  }\n}};\n`;\n_c6 = Char;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n_c7 = ProgressBar;\nconst Progress = styled.div`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c8 = Progress;\nconst CompletionMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n_c9 = CompletionMessage;\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: auto;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  cursor: text;\n`;\n_c10 = HiddenInput;\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  margin-left: -1px;\n  margin-right: 1px;\n  vertical-align: middle;\n  animation: blink 1s step-end infinite;\n  position: relative;\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n_c11 = Cursor;\nconst poems = [{\n  title: '대화',\n  content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`\n}];\n\n// 한글 유니코드 범위 체크\nconst isKorean = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = char => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = char => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n  const jong = code % 28;\n  const jung = (code - jong) / 28 % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 현재 입력이 목표의 일부인지 확인 (로직 개선)\nconst isPartialMatch = (target, input) => {\n  // 한글이 아니면 정확히 일치해야 함\n  if (!isKorean(target)) return target === input;\n\n  // 완전히 일치하는 경우\n  if (target === input) return true;\n\n  // 초성만 입력된 경우 (예: 목표가 '사', 입력이 'ㅅ')\n  if (isChoseong(input)) {\n    const targetDecomp = decompose(target);\n    if (targetDecomp) {\n      return CHOSEONG[targetDecomp.cho] === input;\n    }\n  }\n\n  // 중성만 입력된 경우 (중성 검사 함수 직접 사용)\n  const isJungseong = char => {\n    const code = char.charCodeAt(0);\n    return code >= 0x314F && code <= 0x3163;\n  };\n  if (isJungseong(input)) {\n    return false; // 중성만 있는 경우는 일치하지 않음\n  }\n\n  // 종성까지 입력된 경우 (예: 목표가 '라', 입력이 '랄')\n  if (input.length === 1 && isKorean(input)) {\n    const inputDecomp = decompose(input);\n    const targetDecomp = decompose(target);\n    if (inputDecomp && targetDecomp) {\n      // 초성과 중성이 일치하면 부분 일치로 간주\n      return inputDecomp.cho === targetDecomp.cho && inputDecomp.jung === targetDecomp.jung;\n    }\n  }\n  return false;\n};\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n  const [currentComposition, setCurrentComposition] = useState('');\n\n  // 디버그 정보를 위한 타입 정의\n\n  // 디버그 정보\n  const [debug, setDebug] = useState({\n    showDebug: true\n  });\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentLine, setCurrentLine] = useState(0);\n  const inputRef = useRef(null);\n  const currentPoem = poems[0];\n\n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return correctChars / currentPoem.content.length * 100;\n  };\n\n  // 현재 줄이 완성되었는지 확인하는 함수 (자동 줄바꿈 비활성화)\n  const checkLineCompletion = () => {\n    // 자동 줄바꿈 비활성화\n    return;\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  // useEffect 의존성 배열 수정\n  useEffect(() => {\n    // 조합 중일 때는 체크하지 않음\n    if (!composing) {\n      checkLineCompletion();\n    }\n  }, [userInput, composing, currentLine, poemLines]); // checkLineCompletion 제거\n\n  // 입력 처리 함수 (현재 줄 업데이트 포함)\n  const handleInput = e => {\n    const target = e.currentTarget;\n    const value = target.value || '';\n    const pos = target.selectionStart || 0;\n\n    // 디버그 정보 업데이트\n    setDebug({\n      showDebug: true,\n      currentText: value,\n      cursorPosition: pos,\n      isComposing: composing\n    });\n    setCurrentText(value);\n    setUserInput(value);\n    setCurrentPosition(pos);\n\n    // 입력 기반 라인 계산\n    let currentLineIndex = 0;\n    let charCount = 0;\n    const lines = value.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      const lineLength = lines[i].length;\n      if (pos >= charCount && pos <= charCount + lineLength) {\n        currentLineIndex = i;\n        break;\n      }\n      charCount += lineLength + 1; // 줄바꿈 문자 포함\n    }\n    setCurrentLine(currentLineIndex);\n\n    // 모든 줄이 완성되었는지 확인\n    if (value.length > 0) {\n      let allLinesMatch = true;\n      const inputLines = value.split('\\n');\n      for (let i = 0; i < poemLines.length; i++) {\n        if (i >= inputLines.length || inputLines[i] !== poemLines[i]) {\n          allLinesMatch = false;\n          break;\n        }\n      }\n      if (allLinesMatch && inputLines.length >= poemLines.length) {\n        setCompleted(true);\n      }\n    }\n  };\n\n  // IME 조합이 시작될 때 호출됩니다\n  const handleCompositionStart = e => {\n    setComposing(true);\n    setDebug({\n      showDebug: true,\n      event: 'composition start',\n      data: e.data || '' + ' / value: ' + e.currentTarget.value\n    });\n  };\n\n  // IME 조합이 진행 중일 때 호출됩니다\n  const handleCompositionUpdate = e => {\n    const value = e.currentTarget.value;\n    setCurrentText(value);\n    setDebug({\n      showDebug: true,\n      event: 'composition update',\n      data: e.data || '' + ' / value: ' + value\n    });\n  };\n\n  // IME 조합이 완료될 때 호출됩니다\n  const handleCompositionEnd = e => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCurrentText(finalValue);\n    setUserInput(finalValue);\n\n    // 커서 위치 설정 - 선택 위치 사용\n    const cursorPos = e.currentTarget.selectionStart || finalValue.length;\n    setCurrentPosition(cursorPos);\n    setDebug({\n      showDebug: true,\n      event: 'composition end',\n      data: e.data || '' + ' / value: ' + finalValue + ' / cursor: ' + cursorPos\n    });\n  };\n\n  // 키보드 입력 처리 함수 단순화 - 이벤트의 기본 동작 유지\n  const handleKeyDown = e => {\n    // 아무 작업도 하지 않음 - 브라우저 기본 동작 유지\n    // 기본적으로 백스페이스와 엔터 키는 <input> 요소에서 예상대로 작동함\n  };\n\n  // 줄바꿈 처리를 위한 함수 추가\n  const renderOverlayLine = (targetLine, lineIndex) => {\n    // 현재 텍스트를 줄 단위로 분리\n    const textLines = currentText.split('\\n');\n    // 현재 줄에 해당하는 텍스트 (해당 줄 인덱스가 없으면 빈 문자열)\n    const inputContent = lineIndex < textLines.length ? textLines[lineIndex] : '';\n\n    // 현재 줄의 시작 위치 계산 (전체 텍스트에서의 절대 위치)\n    let lineStartPos = 0;\n    for (let i = 0; i < lineIndex; i++) {\n      lineStartPos += poemLines[i].length + 1; // +1 for newline\n    }\n\n    // 줄 내 문자 단위 처리\n    const result = [];\n    for (let i = 0; i < targetLine.length; i++) {\n      const targetChar = targetLine[i];\n      const inputChar = i < inputContent.length ? inputContent[i] : '';\n      const globalCharPos = lineStartPos + i; // 전체 텍스트에서의 위치\n      const showCursor = globalCharPos === currentPosition;\n      if (i < inputContent.length) {\n        // 입력된 글자 처리\n        const status = isPartialMatch(targetChar, inputChar) ? 'correct' : 'incorrect';\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: status,\n            children: inputChar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), showCursor && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 28\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this));\n      } else {\n        // 입력되지 않은 글자는 커서만 표시\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: showCursor && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 28\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    // 초과 입력된 글자들 처리 (정확히 그 줄에 대해서만)\n    if (inputContent.length > targetLine.length) {\n      for (let i = targetLine.length; i < inputContent.length; i++) {\n        const globalCharPos = lineStartPos + i;\n        const showCursor = globalCharPos === currentPosition;\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Char, {\n            status: \"incorrect\",\n            children: inputContent[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), showCursor && /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 28\n          }, this)]\n        }, `excess-${i}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return result;\n  };\n  const progress = calculateProgress();\n\n  // 초기화 시 커서 위치를 0으로 설정\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      setCurrentPosition(0);\n    }\n  }, []); // 의존성 배열 비워둠\n\n  useEffect(() => {\n    checkLineCompletion();\n  }, [currentLine, currentText, checkLineCompletion]);\n\n  // 렌더링 부분 수정 - 커서 하나만 표시하도록 변경\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onClick: () => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC2DC \\uD0C0\\uC774\\uD551 \\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), (process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB514\\uBC84\\uADF8 \\uC815\\uBCF4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(debug, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      children: /*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BaseText, {\n          children: currentPoem.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              whiteSpace: 'pre-wrap'\n            },\n            children: [currentText.split('').map((char, idx) => {\n              // 원본 텍스트와 비교\n              const targetChar = idx < currentPoem.content.length ? currentPoem.content[idx] : '';\n              const status = isPartialMatch(targetChar, char) ? 'correct' : 'incorrect';\n\n              // 커서 표시 여부\n              const showCursor = idx === currentPosition - 1;\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Char, {\n                  status: status,\n                  children: char\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this), showCursor && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    width: '2px',\n                    height: '1.4em',\n                    backgroundColor: '#fff',\n                    marginLeft: '1px',\n                    animation: 'blink 1s step-end infinite',\n                    verticalAlign: 'middle'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 36\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this);\n            }), currentPosition === currentText.length && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                width: '2px',\n                height: '1.4em',\n                backgroundColor: '#fff',\n                animation: 'blink 1s step-end infinite',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n          ref: inputRef,\n          value: currentText,\n          onChange: handleInput,\n          onCompositionStart: handleCompositionStart,\n          onCompositionUpdate: handleCompositionUpdate,\n          onCompositionEnd: handleCompositionEnd,\n          onKeyDown: handleKeyDown,\n          autoFocus: true,\n          autoComplete: \"off\",\n          autoCorrect: \"off\",\n          spellCheck: false,\n          \"aria-label\": \"\\uC2DC \\uC785\\uB825 \\uD544\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletionMessage, {\n      show: completed,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC2DC\\uB97C \\uC644\\uC131\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZBY4LVXzxscGhR/R7gpzw+Gqj5I=\");\n_c12 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TypingArea\");\n$RefreshReg$(_c4, \"TextContainer\");\n$RefreshReg$(_c5, \"BaseText\");\n$RefreshReg$(_c6, \"Char\");\n$RefreshReg$(_c7, \"ProgressBar\");\n$RefreshReg$(_c8, \"Progress\");\n$RefreshReg$(_c9, \"CompletionMessage\");\n$RefreshReg$(_c10, \"HiddenInput\");\n$RefreshReg$(_c11, \"Cursor\");\n$RefreshReg$(_c12, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","Title","h1","_c2","TypingArea","_c3","TextContainer","_c4","BaseText","_c5","OverlayText","Char","span","props","status","_c6","ProgressBar","_c7","Progress","width","_c8","CompletionMessage","show","_c9","HiddenInput","input","_c10","Cursor","_c11","poems","title","content","isKorean","char","code","charCodeAt","isChoseong","CHOSEONG","decompose","jong","jung","cho","Math","floor","isPartialMatch","target","targetDecomp","isJungseong","length","inputDecomp","App","_s","userInput","setUserInput","completed","setCompleted","composing","setComposing","currentText","setCurrentText","currentComposition","setCurrentComposition","debug","setDebug","showDebug","currentPosition","setCurrentPosition","currentLine","setCurrentLine","inputRef","currentPoem","poemLines","split","calculateProgress","correctChars","filter","i","checkLineCompletion","current","focus","handleInput","e","currentTarget","value","pos","selectionStart","cursorPosition","isComposing","currentLineIndex","charCount","lines","lineLength","allLinesMatch","inputLines","handleCompositionStart","event","data","handleCompositionUpdate","handleCompositionEnd","finalValue","cursorPos","handleKeyDown","renderOverlayLine","targetLine","lineIndex","textLines","inputContent","lineStartPos","result","targetChar","inputChar","globalCharPos","showCursor","push","style","position","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onClick","_inputRef$current","process","env","NODE_ENV","window","location","hostname","className","JSON","stringify","top","left","height","whiteSpace","map","idx","display","backgroundColor","marginLeft","animation","verticalAlign","ref","onChange","onCompositionStart","onCompositionUpdate","onCompositionEnd","onKeyDown","autoFocus","autoComplete","autoCorrect","spellCheck","_c12","$RefreshReg$"],"sources":["/Users/haeunkim/Desktop/project/typescript/SIRO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n  background-color: #2b2b2b;\n  min-height: 100vh;\n  color: #fff;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  margin-bottom: 2rem;\n`;\n\nconst TypingArea = styled.div`\n  margin-bottom: 2rem;\n  position: relative;\n  text-align: left;\n`;\n\nconst TextContainer = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  line-height: 1.8;\n  font-family: monospace;\n`;\n\nconst BaseText = styled.div`\n  white-space: pre-wrap;\n  color: #666;\n  position: relative;\n  z-index: 1;\n  min-height: 200px;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n\nconst OverlayText = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  white-space: pre-wrap;\n  z-index: 2;\n  width: 100%;\n  font-family: monospace;\n  line-height: 1.8em;\n`;\n\nconst Char = styled.span<{ status: 'correct' | 'incorrect' | 'waiting' }>`\n  color: ${props => {\n    switch (props.status) {\n      case 'correct': return '#fff';\n      case 'incorrect': return '#ff4444';\n      case 'waiting': return '#666';\n    }\n  }};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: #444;\n  margin-bottom: 1rem;\n  border-radius: 2px;\n`;\n\nconst Progress = styled.div<{ width: number }>`\n  width: ${props => props.width}%;\n  height: 100%;\n  background-color: ${props => props.width === 100 ? '#4CAF50' : '#666'};\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst CompletionMessage = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 2rem;\n  border-radius: 8px;\n  display: ${props => props.show ? 'block' : 'none'};\n  z-index: 100;\n  text-align: center;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  pointer-events: auto;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  cursor: text;\n`;\n\nconst Cursor = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 1.4em;\n  background-color: #fff;\n  margin-left: -1px;\n  margin-right: 1px;\n  vertical-align: middle;\n  animation: blink 1s step-end infinite;\n  position: relative;\n  \n  @keyframes blink {\n    from, to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n  }\n`;\n\nconst poems = [\n  {\n    title: '대화',\n    content: `사랑을 잃고 나는 쓰네\n잘 있거라, 짧았던 밤들아\n창밖을 떠돌던 겨울 안개들아\n아무것도 모르던 촛불들아, 잘 있거라\n공포를 기다리던 흰 종이들아\n말설임을 대신하던 눈물들아\n잘 있거라, 더 이상 내 것이 아닌 열망들아\n장님처럼 나 이제 더듬거리며 문을 잠그네\n가엾은 내 사랑 빈집에 갇혔네`,\n  }\n];\n\n// 한글 유니코드 범위 체크\nconst isKorean = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0xAC00 && code <= 0xD7A3;\n};\n\n// 초성 검사\nconst isChoseong = (char: string) => {\n  const code = char.charCodeAt(0);\n  return code >= 0x3131 && code <= 0x314E;\n};\n\n// 초성 테이블\nconst CHOSEONG = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n\n// 한글 자모 분리\nconst decompose = (char: string) => {\n  const code = char.charCodeAt(0) - 0xAC00;\n  if (code < 0 || code > 11171) return null;\n\n  const jong = code % 28;\n  const jung = ((code - jong) / 28) % 21;\n  const cho = ((code - jong) / 28 - jung) / 21;\n\n  return {\n    cho: Math.floor(cho),\n    jung: Math.floor(jung),\n    jong: Math.floor(jong)\n  };\n};\n\n// 현재 입력이 목표의 일부인지 확인 (로직 개선)\nconst isPartialMatch = (target: string, input: string) => {\n  // 한글이 아니면 정확히 일치해야 함\n  if (!isKorean(target)) return target === input;\n  \n  // 완전히 일치하는 경우\n  if (target === input) return true;\n\n  // 초성만 입력된 경우 (예: 목표가 '사', 입력이 'ㅅ')\n  if (isChoseong(input)) {\n    const targetDecomp = decompose(target);\n    if (targetDecomp) {\n      return CHOSEONG[targetDecomp.cho] === input;\n    }\n  }\n  \n  // 중성만 입력된 경우 (중성 검사 함수 직접 사용)\n  const isJungseong = (char: string) => {\n    const code = char.charCodeAt(0);\n    return code >= 0x314F && code <= 0x3163;\n  };\n  \n  if (isJungseong(input)) {\n    return false; // 중성만 있는 경우는 일치하지 않음\n  }\n  \n  // 종성까지 입력된 경우 (예: 목표가 '라', 입력이 '랄')\n  if (input.length === 1 && isKorean(input)) {\n    const inputDecomp = decompose(input);\n    const targetDecomp = decompose(target);\n    \n    if (inputDecomp && targetDecomp) {\n      // 초성과 중성이 일치하면 부분 일치로 간주\n      return inputDecomp.cho === targetDecomp.cho && \n             inputDecomp.jung === targetDecomp.jung;\n    }\n  }\n  \n  return false;\n};\n\nconst App: React.FC = () => {\n  const [userInput, setUserInput] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [composing, setComposing] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n  const [currentComposition, setCurrentComposition] = useState('');\n  \n  // 디버그 정보를 위한 타입 정의\n  interface DebugInfo {\n    showDebug: boolean;\n    event?: string;\n    data?: string;\n    currentText?: string;\n    cursorPosition?: number;\n    isComposing?: boolean;\n  }\n  \n  // 디버그 정보\n  const [debug, setDebug] = useState<DebugInfo>({ \n    showDebug: true \n  });\n  \n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentLine, setCurrentLine] = useState(0);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentPoem = poems[0];\n  \n  // 시를 줄 단위로 분할\n  const poemLines = currentPoem.content.split('\\n');\n  \n  const calculateProgress = () => {\n    if (userInput.length === 0) return 0;\n    const correctChars = userInput.split('').filter((char, i) => char === currentPoem.content[i]).length;\n    return (correctChars / currentPoem.content.length) * 100;\n  };\n\n  // 현재 줄이 완성되었는지 확인하는 함수 (자동 줄바꿈 비활성화)\n  const checkLineCompletion = () => {\n    // 자동 줄바꿈 비활성화\n    return;\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  // useEffect 의존성 배열 수정\n  useEffect(() => {\n    // 조합 중일 때는 체크하지 않음\n    if (!composing) {\n      checkLineCompletion();\n    }\n  }, [userInput, composing, currentLine, poemLines]); // checkLineCompletion 제거\n\n  // 입력 처리 함수 (현재 줄 업데이트 포함)\n  const handleInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const target = e.currentTarget;\n    const value = target.value || '';\n    const pos = target.selectionStart || 0;\n    \n    // 디버그 정보 업데이트\n    setDebug({\n      showDebug: true,\n      currentText: value,\n      cursorPosition: pos,\n      isComposing: composing\n    });\n    \n    setCurrentText(value);\n    setUserInput(value);\n    setCurrentPosition(pos);\n    \n    // 입력 기반 라인 계산\n    let currentLineIndex = 0;\n    let charCount = 0;\n    const lines = value.split('\\n');\n    \n    for (let i = 0; i < lines.length; i++) {\n      const lineLength = lines[i].length;\n      if (pos >= charCount && pos <= charCount + lineLength) {\n        currentLineIndex = i;\n        break;\n      }\n      charCount += lineLength + 1; // 줄바꿈 문자 포함\n    }\n    \n    setCurrentLine(currentLineIndex);\n    \n    // 모든 줄이 완성되었는지 확인\n    if (value.length > 0) {\n      let allLinesMatch = true;\n      const inputLines = value.split('\\n');\n      \n      for (let i = 0; i < poemLines.length; i++) {\n        if (i >= inputLines.length || inputLines[i] !== poemLines[i]) {\n          allLinesMatch = false;\n          break;\n        }\n      }\n      \n      if (allLinesMatch && inputLines.length >= poemLines.length) {\n        setCompleted(true);\n      }\n    }\n  };\n\n  // IME 조합이 시작될 때 호출됩니다\n  const handleCompositionStart = (e: React.CompositionEvent<HTMLInputElement>) => {\n    setComposing(true);\n    setDebug({ \n      showDebug: true,\n      event: 'composition start', \n      data: e.data || '' + ' / value: ' + e.currentTarget.value \n    });\n  };\n\n  // IME 조합이 진행 중일 때 호출됩니다\n  const handleCompositionUpdate = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const value = e.currentTarget.value;\n    setCurrentText(value);\n    setDebug({ \n      showDebug: true,\n      event: 'composition update', \n      data: e.data || '' + ' / value: ' + value\n    });\n  };\n\n  // IME 조합이 완료될 때 호출됩니다\n  const handleCompositionEnd = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const finalValue = e.currentTarget.value;\n    setComposing(false);\n    setCurrentText(finalValue);\n    setUserInput(finalValue);\n    \n    // 커서 위치 설정 - 선택 위치 사용\n    const cursorPos = e.currentTarget.selectionStart || finalValue.length;\n    setCurrentPosition(cursorPos);\n    \n    setDebug({ \n      showDebug: true,\n      event: 'composition end', \n      data: e.data || '' + ' / value: ' + finalValue + ' / cursor: ' + cursorPos\n    });\n  };\n\n  // 키보드 입력 처리 함수 단순화 - 이벤트의 기본 동작 유지\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // 아무 작업도 하지 않음 - 브라우저 기본 동작 유지\n    // 기본적으로 백스페이스와 엔터 키는 <input> 요소에서 예상대로 작동함\n  };\n\n  // 줄바꿈 처리를 위한 함수 추가\n  const renderOverlayLine = (targetLine: string, lineIndex: number) => {\n    // 현재 텍스트를 줄 단위로 분리\n    const textLines = currentText.split('\\n');\n    // 현재 줄에 해당하는 텍스트 (해당 줄 인덱스가 없으면 빈 문자열)\n    const inputContent = lineIndex < textLines.length ? textLines[lineIndex] : '';\n    \n    // 현재 줄의 시작 위치 계산 (전체 텍스트에서의 절대 위치)\n    let lineStartPos = 0;\n    for (let i = 0; i < lineIndex; i++) {\n      lineStartPos += poemLines[i].length + 1; // +1 for newline\n    }\n\n    // 줄 내 문자 단위 처리\n    const result: JSX.Element[] = [];\n    for (let i = 0; i < targetLine.length; i++) {\n      const targetChar = targetLine[i];\n      const inputChar = i < inputContent.length ? inputContent[i] : '';\n      const globalCharPos = lineStartPos + i; // 전체 텍스트에서의 위치\n      const showCursor = globalCharPos === currentPosition;\n\n      if (i < inputContent.length) {\n        // 입력된 글자 처리\n        const status = isPartialMatch(targetChar, inputChar) ? 'correct' : 'incorrect';\n        result.push(\n          <span key={i} style={{ position: 'relative' }}>\n            <Char status={status}>{inputChar}</Char>\n            {showCursor && <Cursor />}\n          </span>\n        );\n      } else {\n        // 입력되지 않은 글자는 커서만 표시\n        result.push(\n          <span key={i} style={{ position: 'relative' }}>\n            {showCursor && <Cursor />}\n          </span>\n        );\n      }\n    }\n\n    // 초과 입력된 글자들 처리 (정확히 그 줄에 대해서만)\n    if (inputContent.length > targetLine.length) {\n      for (let i = targetLine.length; i < inputContent.length; i++) {\n        const globalCharPos = lineStartPos + i;\n        const showCursor = globalCharPos === currentPosition;\n        result.push(\n          <span key={`excess-${i}`} style={{ position: 'relative' }}>\n            <Char status=\"incorrect\">{inputContent[i]}</Char>\n            {showCursor && <Cursor />}\n          </span>\n        );\n      }\n    }\n\n    return result;\n  };\n\n  const progress = calculateProgress();\n\n  // 초기화 시 커서 위치를 0으로 설정\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n      setCurrentPosition(0);\n    }\n  }, []); // 의존성 배열 비워둠\n\n  useEffect(() => {\n    checkLineCompletion();\n  }, [currentLine, currentText, checkLineCompletion]);\n\n  // 렌더링 부분 수정 - 커서 하나만 표시하도록 변경\n  return (\n    <AppContainer onClick={() => inputRef.current?.focus()}>\n      <Title>시 타이핑 연습</Title>\n      {/* 디버그 정보 표시 (개발 모드에서만) */}\n      {(process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost') && (\n        <div className=\"debug\">\n          <h3>디버그 정보:</h3>\n          <pre>{JSON.stringify(debug, null, 2)}</pre>\n        </div>\n      )}\n      <ProgressBar>\n        <Progress width={progress} />\n      </ProgressBar>\n      <TypingArea>\n        <TextContainer>\n          {/* 시 내용 표시 */}\n          <BaseText>{currentPoem.content}</BaseText>\n          \n          {/* 입력 내용 오버레이 */}\n          <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n            {/* 사용자 입력 */}\n            <div style={{ position: 'relative', whiteSpace: 'pre-wrap' }}>\n              {currentText.split('').map((char, idx) => {\n                // 원본 텍스트와 비교\n                const targetChar = idx < currentPoem.content.length ? currentPoem.content[idx] : '';\n                const status = isPartialMatch(targetChar, char) ? 'correct' : 'incorrect';\n                \n                // 커서 표시 여부\n                const showCursor = idx === currentPosition - 1;\n                \n                return (\n                  <span key={idx} style={{ position: 'relative' }}>\n                    <Char status={status}>{char}</Char>\n                    {showCursor && <span style={{ \n                      display: 'inline-block', \n                      width: '2px', \n                      height: '1.4em', \n                      backgroundColor: '#fff',\n                      marginLeft: '1px',\n                      animation: 'blink 1s step-end infinite',\n                      verticalAlign: 'middle'\n                    }}></span>}\n                  </span>\n                );\n              })}\n              \n              {/* 입력 위치가 텍스트 끝일 경우 커서 표시 */}\n              {currentPosition === currentText.length && (\n                <span style={{ \n                  display: 'inline-block', \n                  width: '2px', \n                  height: '1.4em', \n                  backgroundColor: '#fff',\n                  animation: 'blink 1s step-end infinite',\n                  verticalAlign: 'middle'\n                }}></span>\n              )}\n            </div>\n          </div>\n          \n          <HiddenInput\n            ref={inputRef}\n            value={currentText}\n            onChange={handleInput}\n            onCompositionStart={handleCompositionStart}\n            onCompositionUpdate={handleCompositionUpdate}\n            onCompositionEnd={handleCompositionEnd}\n            onKeyDown={handleKeyDown}\n            autoFocus\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            spellCheck={false}\n            aria-label=\"시 입력 필드\"\n          />\n        </TextContainer>\n      </TypingArea>\n      <CompletionMessage show={completed}>\n        <h2>🎉 축하합니다! 🎉</h2>\n        <p>성공적으로 시를 완성하셨습니다!</p>\n      </CompletionMessage>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,YAAY;AAUlB,MAAMG,KAAK,GAAGN,MAAM,CAACO,EAAE;AACvB;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,UAAU,GAAGT,MAAM,CAACI,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,UAAU;AAMhB,MAAME,aAAa,GAAGX,MAAM,CAACI,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GALID,aAAa;AAOnB,MAAME,QAAQ,GAAGb,MAAM,CAACI,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GARID,QAAQ;AAUd,MAAME,WAAW,GAAGf,MAAM,CAACI,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMY,IAAI,GAAGhB,MAAM,CAACiB,IAAqD;AACzE,WAAWC,KAAK,IAAI;EAChB,QAAQA,KAAK,CAACC,MAAM;IAClB,KAAK,SAAS;MAAE,OAAO,MAAM;IAC7B,KAAK,WAAW;MAAE,OAAO,SAAS;IAClC,KAAK,SAAS;MAAE,OAAO,MAAM;EAC/B;AACF,CAAC;AACH,CAAC;AAACC,GAAA,GARIJ,IAAI;AAUV,MAAMK,WAAW,GAAGrB,MAAM,CAACI,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkB,GAAA,GANID,WAAW;AAQjB,MAAME,QAAQ,GAAGvB,MAAM,CAACI,GAAsB;AAC9C,WAAWc,KAAK,IAAIA,KAAK,CAACM,KAAK;AAC/B;AACA,sBAAsBN,KAAK,IAAIA,KAAK,CAACM,KAAK,KAAK,GAAG,GAAG,SAAS,GAAG,MAAM;AACvE;AACA;AACA,CAAC;AAACC,GAAA,GANIF,QAAQ;AAQd,MAAMG,iBAAiB,GAAG1B,MAAM,CAACI,GAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAac,KAAK,IAAIA,KAAK,CAACS,IAAI,GAAG,OAAO,GAAG,MAAM;AACnD;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,iBAAiB;AAavB,MAAMG,WAAW,GAAG7B,MAAM,CAAC8B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAVIF,WAAW;AAYjB,MAAMG,MAAM,GAAGhC,MAAM,CAACiB,IAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,IAAA,GAnBID,MAAM;AAqBZ,MAAME,KAAK,GAAG,CACZ;EACEC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,CACF;;AAED;AACA,MAAMC,QAAQ,GAAIC,IAAY,IAAK;EACjC,MAAMC,IAAI,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;EAC/B,OAAOD,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM;AACzC,CAAC;;AAED;AACA,MAAME,UAAU,GAAIH,IAAY,IAAK;EACnC,MAAMC,IAAI,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;EAC/B,OAAOD,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM;AACzC,CAAC;;AAED;AACA,MAAMG,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;AAEhH;AACA,MAAMC,SAAS,GAAIL,IAAY,IAAK;EAClC,MAAMC,IAAI,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM;EACxC,IAAID,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,KAAK,EAAE,OAAO,IAAI;EAEzC,MAAMK,IAAI,GAAGL,IAAI,GAAG,EAAE;EACtB,MAAMM,IAAI,GAAI,CAACN,IAAI,GAAGK,IAAI,IAAI,EAAE,GAAI,EAAE;EACtC,MAAME,GAAG,GAAG,CAAC,CAACP,IAAI,GAAGK,IAAI,IAAI,EAAE,GAAGC,IAAI,IAAI,EAAE;EAE5C,OAAO;IACLC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;IACpBD,IAAI,EAAEE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;IACtBD,IAAI,EAAEG,IAAI,CAACC,KAAK,CAACJ,IAAI;EACvB,CAAC;AACH,CAAC;;AAED;AACA,MAAMK,cAAc,GAAGA,CAACC,MAAc,EAAEpB,KAAa,KAAK;EACxD;EACA,IAAI,CAACO,QAAQ,CAACa,MAAM,CAAC,EAAE,OAAOA,MAAM,KAAKpB,KAAK;;EAE9C;EACA,IAAIoB,MAAM,KAAKpB,KAAK,EAAE,OAAO,IAAI;;EAEjC;EACA,IAAIW,UAAU,CAACX,KAAK,CAAC,EAAE;IACrB,MAAMqB,YAAY,GAAGR,SAAS,CAACO,MAAM,CAAC;IACtC,IAAIC,YAAY,EAAE;MAChB,OAAOT,QAAQ,CAACS,YAAY,CAACL,GAAG,CAAC,KAAKhB,KAAK;IAC7C;EACF;;EAEA;EACA,MAAMsB,WAAW,GAAId,IAAY,IAAK;IACpC,MAAMC,IAAI,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;IAC/B,OAAOD,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM;EACzC,CAAC;EAED,IAAIa,WAAW,CAACtB,KAAK,CAAC,EAAE;IACtB,OAAO,KAAK,CAAC,CAAC;EAChB;;EAEA;EACA,IAAIA,KAAK,CAACuB,MAAM,KAAK,CAAC,IAAIhB,QAAQ,CAACP,KAAK,CAAC,EAAE;IACzC,MAAMwB,WAAW,GAAGX,SAAS,CAACb,KAAK,CAAC;IACpC,MAAMqB,YAAY,GAAGR,SAAS,CAACO,MAAM,CAAC;IAEtC,IAAII,WAAW,IAAIH,YAAY,EAAE;MAC/B;MACA,OAAOG,WAAW,CAACR,GAAG,KAAKK,YAAY,CAACL,GAAG,IACpCQ,WAAW,CAACT,IAAI,KAAKM,YAAY,CAACN,IAAI;IAC/C;EACF;EAEA,OAAO,KAAK;AACd,CAAC;AAED,MAAMU,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8D,SAAS,EAAEC,YAAY,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgE,SAAS,EAAEC,YAAY,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkE,WAAW,EAAEC,cAAc,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;;EAEhE;;EAUA;EACA,MAAM,CAACsE,KAAK,EAAEC,QAAQ,CAAC,GAAGvE,QAAQ,CAAY;IAC5CwE,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1E,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC2E,WAAW,EAAEC,cAAc,CAAC,GAAG5E,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM6E,QAAQ,GAAG3E,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM4E,WAAW,GAAGzC,KAAK,CAAC,CAAC,CAAC;;EAE5B;EACA,MAAM0C,SAAS,GAAGD,WAAW,CAACvC,OAAO,CAACyC,KAAK,CAAC,IAAI,CAAC;EAEjD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIrB,SAAS,CAACJ,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IACpC,MAAM0B,YAAY,GAAGtB,SAAS,CAACoB,KAAK,CAAC,EAAE,CAAC,CAACG,MAAM,CAAC,CAAC1C,IAAI,EAAE2C,CAAC,KAAK3C,IAAI,KAAKqC,WAAW,CAACvC,OAAO,CAAC6C,CAAC,CAAC,CAAC,CAAC5B,MAAM;IACpG,OAAQ0B,YAAY,GAAGJ,WAAW,CAACvC,OAAO,CAACiB,MAAM,GAAI,GAAG;EAC1D,CAAC;;EAED;EACA,MAAM6B,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA;EACF,CAAC;EAEDpF,SAAS,CAAC,MAAM;IACd,IAAI4E,QAAQ,CAACS,OAAO,EAAE;MACpBT,QAAQ,CAACS,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtF,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAAC+D,SAAS,EAAE;MACdqB,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACzB,SAAS,EAAEI,SAAS,EAAEW,WAAW,EAAEI,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMS,WAAW,GAAIC,CAAoC,IAAK;IAC5D,MAAMpC,MAAM,GAAGoC,CAAC,CAACC,aAAa;IAC9B,MAAMC,KAAK,GAAGtC,MAAM,CAACsC,KAAK,IAAI,EAAE;IAChC,MAAMC,GAAG,GAAGvC,MAAM,CAACwC,cAAc,IAAI,CAAC;;IAEtC;IACAtB,QAAQ,CAAC;MACPC,SAAS,EAAE,IAAI;MACfN,WAAW,EAAEyB,KAAK;MAClBG,cAAc,EAAEF,GAAG;MACnBG,WAAW,EAAE/B;IACf,CAAC,CAAC;IAEFG,cAAc,CAACwB,KAAK,CAAC;IACrB9B,YAAY,CAAC8B,KAAK,CAAC;IACnBjB,kBAAkB,CAACkB,GAAG,CAAC;;IAEvB;IACA,IAAII,gBAAgB,GAAG,CAAC;IACxB,IAAIC,SAAS,GAAG,CAAC;IACjB,MAAMC,KAAK,GAAGP,KAAK,CAACX,KAAK,CAAC,IAAI,CAAC;IAE/B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,KAAK,CAAC1C,MAAM,EAAE4B,CAAC,EAAE,EAAE;MACrC,MAAMe,UAAU,GAAGD,KAAK,CAACd,CAAC,CAAC,CAAC5B,MAAM;MAClC,IAAIoC,GAAG,IAAIK,SAAS,IAAIL,GAAG,IAAIK,SAAS,GAAGE,UAAU,EAAE;QACrDH,gBAAgB,GAAGZ,CAAC;QACpB;MACF;MACAa,SAAS,IAAIE,UAAU,GAAG,CAAC,CAAC,CAAC;IAC/B;IAEAvB,cAAc,CAACoB,gBAAgB,CAAC;;IAEhC;IACA,IAAIL,KAAK,CAACnC,MAAM,GAAG,CAAC,EAAE;MACpB,IAAI4C,aAAa,GAAG,IAAI;MACxB,MAAMC,UAAU,GAAGV,KAAK,CAACX,KAAK,CAAC,IAAI,CAAC;MAEpC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACvB,MAAM,EAAE4B,CAAC,EAAE,EAAE;QACzC,IAAIA,CAAC,IAAIiB,UAAU,CAAC7C,MAAM,IAAI6C,UAAU,CAACjB,CAAC,CAAC,KAAKL,SAAS,CAACK,CAAC,CAAC,EAAE;UAC5DgB,aAAa,GAAG,KAAK;UACrB;QACF;MACF;MAEA,IAAIA,aAAa,IAAIC,UAAU,CAAC7C,MAAM,IAAIuB,SAAS,CAACvB,MAAM,EAAE;QAC1DO,YAAY,CAAC,IAAI,CAAC;MACpB;IACF;EACF,CAAC;;EAED;EACA,MAAMuC,sBAAsB,GAAIb,CAA2C,IAAK;IAC9ExB,YAAY,CAAC,IAAI,CAAC;IAClBM,QAAQ,CAAC;MACPC,SAAS,EAAE,IAAI;MACf+B,KAAK,EAAE,mBAAmB;MAC1BC,IAAI,EAAEf,CAAC,CAACe,IAAI,IAAI,EAAE,GAAG,YAAY,GAAGf,CAAC,CAACC,aAAa,CAACC;IACtD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAIhB,CAA2C,IAAK;IAC/E,MAAME,KAAK,GAAGF,CAAC,CAACC,aAAa,CAACC,KAAK;IACnCxB,cAAc,CAACwB,KAAK,CAAC;IACrBpB,QAAQ,CAAC;MACPC,SAAS,EAAE,IAAI;MACf+B,KAAK,EAAE,oBAAoB;MAC3BC,IAAI,EAAEf,CAAC,CAACe,IAAI,IAAI,EAAE,GAAG,YAAY,GAAGb;IACtC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMe,oBAAoB,GAAIjB,CAA2C,IAAK;IAC5E,MAAMkB,UAAU,GAAGlB,CAAC,CAACC,aAAa,CAACC,KAAK;IACxC1B,YAAY,CAAC,KAAK,CAAC;IACnBE,cAAc,CAACwC,UAAU,CAAC;IAC1B9C,YAAY,CAAC8C,UAAU,CAAC;;IAExB;IACA,MAAMC,SAAS,GAAGnB,CAAC,CAACC,aAAa,CAACG,cAAc,IAAIc,UAAU,CAACnD,MAAM;IACrEkB,kBAAkB,CAACkC,SAAS,CAAC;IAE7BrC,QAAQ,CAAC;MACPC,SAAS,EAAE,IAAI;MACf+B,KAAK,EAAE,iBAAiB;MACxBC,IAAI,EAAEf,CAAC,CAACe,IAAI,IAAI,EAAE,GAAG,YAAY,GAAGG,UAAU,GAAG,aAAa,GAAGC;IACnE,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIpB,CAAwC,IAAK;IAClE;IACA;EAAA,CACD;;EAED;EACA,MAAMqB,iBAAiB,GAAGA,CAACC,UAAkB,EAAEC,SAAiB,KAAK;IACnE;IACA,MAAMC,SAAS,GAAG/C,WAAW,CAACc,KAAK,CAAC,IAAI,CAAC;IACzC;IACA,MAAMkC,YAAY,GAAGF,SAAS,GAAGC,SAAS,CAACzD,MAAM,GAAGyD,SAAS,CAACD,SAAS,CAAC,GAAG,EAAE;;IAE7E;IACA,IAAIG,YAAY,GAAG,CAAC;IACpB,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,SAAS,EAAE5B,CAAC,EAAE,EAAE;MAClC+B,YAAY,IAAIpC,SAAS,CAACK,CAAC,CAAC,CAAC5B,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3C;;IAEA;IACA,MAAM4D,MAAqB,GAAG,EAAE;IAChC,KAAK,IAAIhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2B,UAAU,CAACvD,MAAM,EAAE4B,CAAC,EAAE,EAAE;MAC1C,MAAMiC,UAAU,GAAGN,UAAU,CAAC3B,CAAC,CAAC;MAChC,MAAMkC,SAAS,GAAGlC,CAAC,GAAG8B,YAAY,CAAC1D,MAAM,GAAG0D,YAAY,CAAC9B,CAAC,CAAC,GAAG,EAAE;MAChE,MAAMmC,aAAa,GAAGJ,YAAY,GAAG/B,CAAC,CAAC,CAAC;MACxC,MAAMoC,UAAU,GAAGD,aAAa,KAAK9C,eAAe;MAEpD,IAAIW,CAAC,GAAG8B,YAAY,CAAC1D,MAAM,EAAE;QAC3B;QACA,MAAMlC,MAAM,GAAG8B,cAAc,CAACiE,UAAU,EAAEC,SAAS,CAAC,GAAG,SAAS,GAAG,WAAW;QAC9EF,MAAM,CAACK,IAAI,cACTpH,OAAA;UAAcqH,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAC,QAAA,gBAC5CvH,OAAA,CAACc,IAAI;YAACG,MAAM,EAAEA,MAAO;YAAAsG,QAAA,EAAEN;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACvCR,UAAU,iBAAInH,OAAA,CAAC8B,MAAM;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAFhB5C,CAAC;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGN,CACR,CAAC;MACH,CAAC,MAAM;QACL;QACAZ,MAAM,CAACK,IAAI,cACTpH,OAAA;UAAcqH,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAC,QAAA,EAC3CJ,UAAU,iBAAInH,OAAA,CAAC8B,MAAM;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADhB5C,CAAC;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACR,CAAC;MACH;IACF;;IAEA;IACA,IAAId,YAAY,CAAC1D,MAAM,GAAGuD,UAAU,CAACvD,MAAM,EAAE;MAC3C,KAAK,IAAI4B,CAAC,GAAG2B,UAAU,CAACvD,MAAM,EAAE4B,CAAC,GAAG8B,YAAY,CAAC1D,MAAM,EAAE4B,CAAC,EAAE,EAAE;QAC5D,MAAMmC,aAAa,GAAGJ,YAAY,GAAG/B,CAAC;QACtC,MAAMoC,UAAU,GAAGD,aAAa,KAAK9C,eAAe;QACpD2C,MAAM,CAACK,IAAI,cACTpH,OAAA;UAA0BqH,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAC,QAAA,gBACxDvH,OAAA,CAACc,IAAI;YAACG,MAAM,EAAC,WAAW;YAAAsG,QAAA,EAAEV,YAAY,CAAC9B,CAAC;UAAC;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAChDR,UAAU,iBAAInH,OAAA,CAAC8B,MAAM;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAFhB,UAAU5C,CAAC,EAAE;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGlB,CACR,CAAC;MACH;IACF;IAEA,OAAOZ,MAAM;EACf,CAAC;EAED,MAAMa,QAAQ,GAAGhD,iBAAiB,CAAC,CAAC;;EAEpC;EACAhF,SAAS,CAAC,MAAM;IACd,IAAI4E,QAAQ,CAACS,OAAO,EAAE;MACpBT,QAAQ,CAACS,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBb,kBAAkB,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERzE,SAAS,CAAC,MAAM;IACdoF,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACV,WAAW,EAAET,WAAW,EAAEmB,mBAAmB,CAAC,CAAC;;EAEnD;EACA,oBACEhF,OAAA,CAACC,YAAY;IAAC4H,OAAO,EAAEA,CAAA;MAAA,IAAAC,iBAAA;MAAA,QAAAA,iBAAA,GAAMtD,QAAQ,CAACS,OAAO,cAAA6C,iBAAA,uBAAhBA,iBAAA,CAAkB5C,KAAK,CAAC,CAAC;IAAA,CAAC;IAAAqC,QAAA,gBACrDvH,OAAA,CAACI,KAAK;MAAAmH,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAEtB,CAACI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,kBAClFpI,OAAA;MAAKqI,SAAS,EAAC,OAAO;MAAAd,QAAA,gBACpBvH,OAAA;QAAAuH,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB3H,OAAA;QAAAuH,QAAA,EAAMe,IAAI,CAACC,SAAS,CAACtE,KAAK,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN,eACD3H,OAAA,CAACmB,WAAW;MAAAoG,QAAA,eACVvH,OAAA,CAACqB,QAAQ;QAACC,KAAK,EAAEsG;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACd3H,OAAA,CAACO,UAAU;MAAAgH,QAAA,eACTvH,OAAA,CAACS,aAAa;QAAA8G,QAAA,gBAEZvH,OAAA,CAACW,QAAQ;UAAA4G,QAAA,EAAE9C,WAAW,CAACvC;QAAO;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAG1C3H,OAAA;UAAKqH,KAAK,EAAE;YAAEC,QAAQ,EAAE,UAAU;YAAEkB,GAAG,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEnH,KAAK,EAAE,MAAM;YAAEoH,MAAM,EAAE;UAAO,CAAE;UAAAnB,QAAA,eAEnFvH,OAAA;YAAKqH,KAAK,EAAE;cAAEC,QAAQ,EAAE,UAAU;cAAEqB,UAAU,EAAE;YAAW,CAAE;YAAApB,QAAA,GAC1D1D,WAAW,CAACc,KAAK,CAAC,EAAE,CAAC,CAACiE,GAAG,CAAC,CAACxG,IAAI,EAAEyG,GAAG,KAAK;cACxC;cACA,MAAM7B,UAAU,GAAG6B,GAAG,GAAGpE,WAAW,CAACvC,OAAO,CAACiB,MAAM,GAAGsB,WAAW,CAACvC,OAAO,CAAC2G,GAAG,CAAC,GAAG,EAAE;cACnF,MAAM5H,MAAM,GAAG8B,cAAc,CAACiE,UAAU,EAAE5E,IAAI,CAAC,GAAG,SAAS,GAAG,WAAW;;cAEzE;cACA,MAAM+E,UAAU,GAAG0B,GAAG,KAAKzE,eAAe,GAAG,CAAC;cAE9C,oBACEpE,OAAA;gBAAgBqH,KAAK,EAAE;kBAAEC,QAAQ,EAAE;gBAAW,CAAE;gBAAAC,QAAA,gBAC9CvH,OAAA,CAACc,IAAI;kBAACG,MAAM,EAAEA,MAAO;kBAAAsG,QAAA,EAAEnF;gBAAI;kBAAAoF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,EAClCR,UAAU,iBAAInH,OAAA;kBAAMqH,KAAK,EAAE;oBAC1ByB,OAAO,EAAE,cAAc;oBACvBxH,KAAK,EAAE,KAAK;oBACZoH,MAAM,EAAE,OAAO;oBACfK,eAAe,EAAE,MAAM;oBACvBC,UAAU,EAAE,KAAK;oBACjBC,SAAS,EAAE,4BAA4B;oBACvCC,aAAa,EAAE;kBACjB;gBAAE;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAVDkB,GAAG;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWR,CAAC;YAEX,CAAC,CAAC,EAGDvD,eAAe,KAAKP,WAAW,CAACV,MAAM,iBACrCnD,OAAA;cAAMqH,KAAK,EAAE;gBACXyB,OAAO,EAAE,cAAc;gBACvBxH,KAAK,EAAE,KAAK;gBACZoH,MAAM,EAAE,OAAO;gBACfK,eAAe,EAAE,MAAM;gBACvBE,SAAS,EAAE,4BAA4B;gBACvCC,aAAa,EAAE;cACjB;YAAE;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACV;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN3H,OAAA,CAAC2B,WAAW;UACVwH,GAAG,EAAE3E,QAAS;UACdc,KAAK,EAAEzB,WAAY;UACnBuF,QAAQ,EAAEjE,WAAY;UACtBkE,kBAAkB,EAAEpD,sBAAuB;UAC3CqD,mBAAmB,EAAElD,uBAAwB;UAC7CmD,gBAAgB,EAAElD,oBAAqB;UACvCmD,SAAS,EAAEhD,aAAc;UACzBiD,SAAS;UACTC,YAAY,EAAC,KAAK;UAClBC,WAAW,EAAC,KAAK;UACjBC,UAAU,EAAE,KAAM;UAClB,cAAW;QAAS;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACb3H,OAAA,CAACwB,iBAAiB;MAACC,IAAI,EAAEgC,SAAU;MAAA8D,QAAA,gBACjCvH,OAAA;QAAAuH,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB3H,OAAA;QAAAuH,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEnB,CAAC;AAACrE,EAAA,CAnTID,GAAa;AAAAwG,IAAA,GAAbxG,GAAa;AAqTnB,eAAeA,GAAG;AAAC,IAAAlD,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,IAAA,EAAAE,IAAA,EAAA8H,IAAA;AAAAC,YAAA,CAAA3J,EAAA;AAAA2J,YAAA,CAAAxJ,GAAA;AAAAwJ,YAAA,CAAAtJ,GAAA;AAAAsJ,YAAA,CAAApJ,GAAA;AAAAoJ,YAAA,CAAAlJ,GAAA;AAAAkJ,YAAA,CAAA5I,GAAA;AAAA4I,YAAA,CAAA1I,GAAA;AAAA0I,YAAA,CAAAvI,GAAA;AAAAuI,YAAA,CAAApI,GAAA;AAAAoI,YAAA,CAAAjI,IAAA;AAAAiI,YAAA,CAAA/H,IAAA;AAAA+H,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}